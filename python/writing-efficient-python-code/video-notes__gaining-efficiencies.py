"""
Gaining Efficiencies

Efficiently combining, counting, and iterating

Pokemon Overview:
 + Trainers (collect Pokemon)
 + Pokemon (fictional animal characters)
 + Pokedex (stores captured Pokemon)

Combining Objects:
Suppose we have two lists, one of Pokemon names, and another of Pokemon Health Points and we want them combined:
"""
import numpy as np

ash_set = {'Bulbasaur', 'Koffing', 'Pikachu', 'Psyduck', 'Rattata', 'Spearow', 'Squirtle', 'Vulpix',
           'Wigglytuff', 'Zubat'}
misty_set = {'Horsea', 'Krabby', 'Magikarp', 'Poliwag', 'Psyduck', 'Slowbro', 'Squirtle', 'Starmie',
             'Tentacool', 'Vaporeon'}
ash_pokedex = ['Pikachu', 'Bulbasaur', 'Koffing', 'Spearow', 'Vulpix', 'Wigglytuff', 'Zubat', 'Rattata',
               'Psyduck', 'Squirtle']
brock_pokedex = ['Onix', 'Geodude', 'Zubat', 'Golem', 'Vulpix', 'Tauros', 'Kabutops', 'Omastar', 'Machop', 'Dugtrio']
names = ['Forretress',
         'WormadamSandy Cloak',
         'Croagunk',
         'Mime Jr.',
         'Camerupt',
         'Alomomola',
         'Munchlax',
         'Tauros',
         'Victini',
         'Salamence',
         'Flygon',
         'Cottonee',
         'Pachirisu',
         'Caterpie',
         'Avalugg',
         'Beldum',
         'Foongus',
         'Zigzagoon',
         'Buizel',
         'Octillery',
         'Seviper',
         'Charmeleon',
         'Torkoal',
         'Doublade',
         'Grovyle',
         'Maractus',
         'Tynamo',
         'Magikarp',
         'Beautifly',
         'Parasect',
         'Frogadier',
         'Clefairy',
         'Doduo',
         'Aggron',
         'Conkeldurr',
         'Volbeat',
         'Whimsicott',
         'Sentret',
         'Lairon',
         'Jirachi',
         'Cloyster',
         'Dragalge',
         'Hitmonlee',
         'Gothitelle',
         'Delphox',
         'Magmortar',
         'Talonflame',
         'Victini',
         'Feebas',
         'Rampardos',
         'Marowak',
         'Pelipper',
         'Espurr',
         'MeowsticMale',
         'Stunfisk',
         'Cascoon',
         'Metang',
         'Scizor',
         'Chimecho',
         'Anorith',
         'Heatmor',
         'Shieldon',
         'Doduo',
         'Mesprit',
         'Nidoranâ™€',
         'Wartortle',
         'Wooper',
         'Mr. Mime',
         'Mightyena',
         'Mankey',
         'Golbat',
         'Azurill',
         'Bagon',
         'Leafeon',
         'Electivire',
         'Milotic',
         'Elekid',
         'Chimecho',
         'Delphox',
         'Gabite',
         'Scizor',
         'Budew',
         'Haxorus',
         'Porygon-Z',
         'Beldum',
         'Torterra',
         'Volcanion',
         'Chimecho',
         'Pidove',
         'Entei',
         'WormadamPlant Cloak',
         'Azelf',
         'Galvantula',
         'Tirtouga',
         'Gible',
         'Primeape',
         'Zweilous',
         'Shellder',
         'Ho-oh',
         'Emboar',
         'Rotom',
         'Solosis',
         'Vigoroth',
         'Frogadier',
         'Ampharos',
         'Gastly',
         'Riolu',
         'Doublade',
         'Kirlia',
         'Lickitung',
         'Aromatisse',
         'Mandibuzz',
         'Happiny',
         'Chandelure',
         'Gorebyss',
         'Barboach',
         'Eevee',
         'Ho-oh',
         'Duosion',
         'Sewaddle',
         'Hippopotas',
         'Seaking',
         'Butterfree',
         'Mew',
         'Bronzor',
         'Suicune',
         'Herdier',
         'Xerneas',
         'Mareep',
         'Slakoth',
         'Uxie',
         'Samurott',
         'Dewgong',
         'Togekiss',
         'Pichu',
         'Vanillish',
         'Zapdos',
         'Floette',
         'Fletchling',
         'Vigoroth',
         'Umbreon',
         'Conkeldurr',
         'Phantump',
         'Shellder',
         'WormadamTrash Cloak',
         'Rampardos',
         'Electabuzz',
         'Clawitzer',
         'Dedenne',
         'Regigigas',
         'Xatu',
         'Wartortle',
         'Growlithe',
         'Gulpin',
         'Weezing',
         'Starly',
         'Scraggy',
         'Skrelp',
         'Wynaut',
         'Carvanha',
         'Solrock',
         'Heatmor',
         'KyogrePrimal Kyogre',
         'Swinub',
         'Mothim',
         'Eelektrik',
         'Yanma',
         'Piplup',
         'Chespin',
         'Shellos',
         'Cradily',
         'Chatot',
         'Burmy',
         'Groudon',
         'Inkay',
         'Azumarill',
         'Spinarak',
         'Surskit',
         'Azelf',
         'Chandelure',
         'Ariados',
         'Gloom',
         'Toxicroak',
         'Teddiursa',
         'Forretress',
         'Onix',
         'Musharna',
         'Carbink',
         'Phantump',
         'Ledyba',
         'Escavalier',
         'Misdreavus',
         'Nuzleaf',
         'Drilbur',
         'Staravia',
         'Garbodor',
         'Slakoth',
         'Glalie',
         'Minccino',
         'Cottonee',
         'Feraligatr',
         'Munna',
         'Ditto',
         'Feraligatr',
         'Igglybuff',
         'Electrike',
         'Tropius',
         'Muk',
         'Froslass',
         'Huntail',
         'Pidove',
         'Shellder',
         'Regice',
         'Sealeo',
         'Chinchou',
         'Absol',
         'Skrelp',
         'Volcarona',
         'Minun',
         'Magnezone',
         'Feraligatr',
         'Marowak',
         'Mantine',
         'Shelmet',
         'Abra',
         'Musharna',
         'Chespin',
         'Victreebel',
         'Sudowoodo',
         'Grotle',
         'Hawlucha',
         'Ivysaur',
         'Mew',
         'Hawlucha',
         'Porygon',
         'Qwilfish',
         'Skrelp',
         'Natu',
         'Clefable',
         'Anorith',
         'RotomWash Rotom',
         'Swoobat',
         'Floette',
         'Corsola',
         'Marowak',
         'Glalie',
         'Buneary',
         'Zweilous',
         'Arceus',
         'Ponyta',
         'Sandslash',
         'Dugtrio',
         'Kingler',
         'Breloom',
         'Lilligant',
         'Entei',
         'Carbink',
         'Audino',
         'Dewott',
         'Golem',
         'Victreebel',
         'Shiftry',
         'Swirlix',
         'Caterpie',
         'Krabby',
         'Nosepass',
         'Roggenrola',
         'Gligar',
         'Sceptile',
         'Sunflora',
         'Leavanny',
         'Froakie',
         'Girafarig',
         'Exeggcute',
         'Simipour',
         'Archeops',
         'Kadabra',
         'Chikorita',
         'Chansey',
         'Onix',
         'Cottonee',
         'Muk',
         'Chimecho',
         'Victini',
         'Gastrodon',
         'Cradily',
         'Exeggcute',
         'Celebi',
         'Eelektross',
         'Sliggoo',
         'Haunter',
         'Bouffalant',
         'Crobat',
         'Solrock',
         'Whismur',
         'Sudowoodo',
         'Durant',
         'Articuno',
         'Minun',
         'Rhyperior',
         'Ho-oh',
         'Electrode',
         'Lombre',
         'Mesprit',
         'Goodra',
         'Numel',
         'Castform',
         'Drifblim',
         'Bastiodon',
         'Helioptile',
         'Aggron',
         'Scolipede',
         'Sandslash',
         'Cherrim',
         'Mantyke',
         'Golduck',
         'Wingull',
         'Froslass',
         'Seismitoad',
         'Manaphy',
         'Jynx',
         'Gallade',
         'Karrablast',
         'Rampardos',
         'Haxorus',
         'Sandshrew',
         'Bayleef',
         'Ludicolo',
         'Blitzle',
         'Venonat',
         'Chingling',
         'Flygon',
         'Raticate',
         'Espeon',
         'Lileep',
         'Durant',
         'Surskit',
         'Wynaut',
         'Slowking',
         'Abomasnow',
         'Larvesta',
         'Registeel',
         'Hoppip',
         'Drilbur',
         'Aggron',
         'Murkrow',
         'Fennekin',
         'Archen',
         'Klink',
         'Pignite',
         'Golduck',
         'Sableye',
         'Wartortle',
         'Sliggoo',
         'Trapinch',
         'Vanilluxe',
         'Gengar',
         'Carracosta',
         'Espurr',
         'Golett',
         'Tropius',
         'Weepinbell',
         'Krabby',
         'Talonflame',
         'Hippopotas',
         'Simisear',
         'Slowbro',
         'Manectric',
         'Lugia',
         'Gligar',
         'Claydol',
         'Tangela',
         'Duskull',
         'Buneary',
         'Altaria',
         'Cryogonal',
         'Elekid',
         'Toxicroak',
         'Zapdos',
         'Ralts',
         'KyogrePrimal Kyogre',
         "Farfetch'd",
         'Duskull',
         'Mesprit',
         'Mightyena',
         'Manaphy',
         'Zebstrika',
         'Vileplume',
         'Smeargle',
         'Ludicolo',
         'Numel',
         'Snover',
         'Totodile',
         'Reuniclus',
         'Panpour',
         'Pyroar',
         'Qwilfish',
         'Manaphy',
         'Tyranitar',
         'Kyurem',
         'Honchkrow',
         'Tympole',
         'Azurill',
         'Pikachu',
         'Forretress',
         'Marshtomp',
         'Persian',
         'Gigalith',
         'Clamperl',
         'Poliwag',
         'Reuniclus',
         'Kricketot',
         'Exeggcute',
         'Infernape',
         'Chingling',
         'Gulpin',
         'Yveltal',
         'Porygon-Z',
         'Cascoon',
         'Donphan',
         'Duosion',
         'Natu',
         'Lombre',
         'Phantump',
         'Spheal',
         'Corsola',
         'Bastiodon',
         'Spritzee',
         'Nincada',
         'Beheeyem',
         'Quagsire',
         'Combusken',
         'Vespiquen',
         'DarmanitanStandard Mode',
         'Scizor',
         'Swanna',
         'Pidgeotto',
         'Cradily',
         'Blissey',
         'Clefable',
         'Numel',
         'Virizion',
         'Chesnaught',
         'Yamask',
         'Burmy',
         'Butterfree',
         'Garchomp',
         'Masquerain',
         'Ursaring',
         'Servine',
         'Infernape',
         'Ludicolo',
         'Gastrodon',
         'Ducklett',
         'Bergmite',
         'Espurr',
         'Moltres',
         'Butterfree',
         'Arcanine',
         'Chansey',
         'Chespin',
         'Snover',
         'Shroomish',
         'Mightyena',
         'Swoobat',
         'Grumpig',
         'Bellsprout',
         'Cyndaquil',
         'Gabite',
         'Bibarel',
         'Zorua',
         'WormadamPlant Cloak',
         'Roggenrola',
         'Arcanine',
         'Slakoth',
         'Dewott',
         'Scizor',
         'Crawdaunt',
         'Fearow',
         'Buizel',
         'Tentacruel',
         'Azumarill',
         'Espeon',
         'Watchog',
         'Staravia',
         'Amaura',
         'Exeggutor',
         'Gible',
         'Marowak',
         'Ekans',
         'Bastiodon',
         'Shelgon',
         'Roserade',
         'Scrafty',
         'Machamp',
         'Shuppet',
         'Mawile',
         'Boldore',
         'Krookodile',
         'Sudowoodo']
poke_names = names
primary_types = ['Bug',
                 'Bug',
                 'Poison',
                 'Psychic',
                 'Fire',
                 'Water',
                 'Normal',
                 'Normal',
                 'Psychic',
                 'Dragon',
                 'Ground',
                 'Grass',
                 'Electric',
                 'Bug',
                 'Ice',
                 'Steel',
                 'Grass',
                 'Normal',
                 'Water',
                 'Water',
                 'Poison',
                 'Fire',
                 'Fire',
                 'Steel',
                 'Grass',
                 'Grass',
                 'Electric',
                 'Water',
                 'Bug',
                 'Bug',
                 'Water',
                 'Fairy',
                 'Normal',
                 'Steel',
                 'Fighting',
                 'Bug',
                 'Grass',
                 'Normal',
                 'Steel',
                 'Steel',
                 'Water',
                 'Poison',
                 'Fighting',
                 'Psychic',
                 'Fire',
                 'Fire',
                 'Fire',
                 'Psychic',
                 'Water',
                 'Rock',
                 'Ground',
                 'Water',
                 'Psychic',
                 'Psychic',
                 'Ground',
                 'Bug',
                 'Steel',
                 'Bug',
                 'Psychic',
                 'Rock',
                 'Fire',
                 'Rock',
                 'Normal',
                 'Psychic',
                 'Poison',
                 'Water',
                 'Water',
                 'Psychic',
                 'Dark',
                 'Fighting',
                 'Poison',
                 'Normal',
                 'Dragon',
                 'Grass',
                 'Electric',
                 'Water',
                 'Electric',
                 'Psychic',
                 'Fire',
                 'Dragon',
                 'Bug',
                 'Grass',
                 'Dragon',
                 'Normal',
                 'Steel',
                 'Grass',
                 'Fire',
                 'Psychic',
                 'Normal',
                 'Fire',
                 'Bug',
                 'Psychic',
                 'Bug',
                 'Water',
                 'Dragon',
                 'Fighting',
                 'Dark',
                 'Water',
                 'Fire',
                 'Fire',
                 'Electric',
                 'Psychic',
                 'Normal',
                 'Water',
                 'Electric',
                 'Ghost',
                 'Fighting',
                 'Steel',
                 'Psychic',
                 'Normal',
                 'Fairy',
                 'Dark',
                 'Normal',
                 'Ghost',
                 'Water',
                 'Water',
                 'Normal',
                 'Fire',
                 'Psychic',
                 'Bug',
                 'Ground',
                 'Water',
                 'Bug',
                 'Psychic',
                 'Steel',
                 'Water',
                 'Normal',
                 'Fairy',
                 'Electric',
                 'Normal',
                 'Psychic',
                 'Water',
                 'Water',
                 'Fairy',
                 'Electric',
                 'Ice',
                 'Electric',
                 'Fairy',
                 'Normal',
                 'Normal',
                 'Dark',
                 'Fighting',
                 'Ghost',
                 'Water',
                 'Bug',
                 'Rock',
                 'Electric',
                 'Water',
                 'Electric',
                 'Normal',
                 'Psychic',
                 'Water',
                 'Fire',
                 'Poison',
                 'Poison',
                 'Normal',
                 'Dark',
                 'Poison',
                 'Psychic',
                 'Water',
                 'Rock',
                 'Fire',
                 'Water',
                 'Ice',
                 'Bug',
                 'Electric',
                 'Bug',
                 'Water',
                 'Grass',
                 'Water',
                 'Rock',
                 'Normal',
                 'Bug',
                 'Ground',
                 'Dark',
                 'Water',
                 'Bug',
                 'Bug',
                 'Psychic',
                 'Ghost',
                 'Bug',
                 'Grass',
                 'Poison',
                 'Normal',
                 'Bug',
                 'Rock',
                 'Psychic',
                 'Rock',
                 'Ghost',
                 'Bug',
                 'Bug',
                 'Ghost',
                 'Grass',
                 'Ground',
                 'Normal',
                 'Poison',
                 'Normal',
                 'Ice',
                 'Normal',
                 'Grass',
                 'Water',
                 'Psychic',
                 'Normal',
                 'Water',
                 'Normal',
                 'Electric',
                 'Grass',
                 'Poison',
                 'Ice',
                 'Water',
                 'Normal',
                 'Water',
                 'Ice',
                 'Ice',
                 'Water',
                 'Dark',
                 'Poison',
                 'Bug',
                 'Electric',
                 'Electric',
                 'Water',
                 'Ground',
                 'Water',
                 'Bug',
                 'Psychic',
                 'Psychic',
                 'Grass',
                 'Grass',
                 'Rock',
                 'Grass',
                 'Fighting',
                 'Grass',
                 'Psychic',
                 'Fighting',
                 'Normal',
                 'Water',
                 'Poison',
                 'Psychic',
                 'Fairy',
                 'Rock',
                 'Electric',
                 'Psychic',
                 'Fairy',
                 'Water',
                 'Ground',
                 'Ice',
                 'Normal',
                 'Dark',
                 'Normal',
                 'Fire',
                 'Ground',
                 'Ground',
                 'Water',
                 'Grass',
                 'Grass',
                 'Fire',
                 'Rock',
                 'Normal',
                 'Water',
                 'Rock',
                 'Grass',
                 'Grass',
                 'Fairy',
                 'Bug',
                 'Water',
                 'Rock',
                 'Rock',
                 'Ground',
                 'Grass',
                 'Grass',
                 'Bug',
                 'Water',
                 'Normal',
                 'Grass',
                 'Water',
                 'Rock',
                 'Psychic',
                 'Grass',
                 'Normal',
                 'Rock',
                 'Grass',
                 'Poison',
                 'Psychic',
                 'Psychic',
                 'Water',
                 'Rock',
                 'Grass',
                 'Psychic',
                 'Electric',
                 'Dragon',
                 'Ghost',
                 'Normal',
                 'Poison',
                 'Rock',
                 'Normal',
                 'Rock',
                 'Bug',
                 'Ice',
                 'Electric',
                 'Ground',
                 'Fire',
                 'Electric',
                 'Water',
                 'Psychic',
                 'Dragon',
                 'Fire',
                 'Normal',
                 'Ghost',
                 'Rock',
                 'Electric',
                 'Steel',
                 'Bug',
                 'Ground',
                 'Grass',
                 'Water',
                 'Water',
                 'Water',
                 'Ice',
                 'Water',
                 'Water',
                 'Ice',
                 'Psychic',
                 'Bug',
                 'Rock',
                 'Dragon',
                 'Ground',
                 'Grass',
                 'Water',
                 'Electric',
                 'Bug',
                 'Psychic',
                 'Ground',
                 'Normal',
                 'Psychic',
                 'Rock',
                 'Bug',
                 'Bug',
                 'Psychic',
                 'Water',
                 'Grass',
                 'Bug',
                 'Steel',
                 'Grass',
                 'Ground',
                 'Steel',
                 'Dark',
                 'Fire',
                 'Rock',
                 'Steel',
                 'Fire',
                 'Water',
                 'Dark',
                 'Water',
                 'Dragon',
                 'Ground',
                 'Ice',
                 'Ghost',
                 'Water',
                 'Psychic',
                 'Ground',
                 'Grass',
                 'Grass',
                 'Water',
                 'Fire',
                 'Ground',
                 'Fire',
                 'Water',
                 'Electric',
                 'Psychic',
                 'Ground',
                 'Ground',
                 'Grass',
                 'Ghost',
                 'Normal',
                 'Dragon',
                 'Ice',
                 'Electric',
                 'Poison',
                 'Electric',
                 'Psychic',
                 'Water',
                 'Normal',
                 'Ghost',
                 'Psychic',
                 'Dark',
                 'Water',
                 'Electric',
                 'Grass',
                 'Normal',
                 'Water',
                 'Fire',
                 'Grass',
                 'Water',
                 'Psychic',
                 'Water',
                 'Fire',
                 'Water',
                 'Water',
                 'Rock',
                 'Dragon',
                 'Dark',
                 'Water',
                 'Normal',
                 'Electric',
                 'Bug',
                 'Water',
                 'Normal',
                 'Rock',
                 'Water',
                 'Water',
                 'Psychic',
                 'Bug',
                 'Grass',
                 'Fire',
                 'Psychic',
                 'Poison',
                 'Dark',
                 'Normal',
                 'Bug',
                 'Ground',
                 'Psychic',
                 'Psychic',
                 'Water',
                 'Ghost',
                 'Ice',
                 'Water',
                 'Rock',
                 'Fairy',
                 'Bug',
                 'Psychic',
                 'Water',
                 'Fire',
                 'Bug',
                 'Fire',
                 'Bug',
                 'Water',
                 'Normal',
                 'Rock',
                 'Normal',
                 'Fairy',
                 'Fire',
                 'Grass',
                 'Grass',
                 'Ghost',
                 'Bug',
                 'Bug',
                 'Dragon',
                 'Bug',
                 'Normal',
                 'Grass',
                 'Fire',
                 'Water',
                 'Water',
                 'Water',
                 'Ice',
                 'Psychic',
                 'Fire',
                 'Bug',
                 'Fire',
                 'Normal',
                 'Grass',
                 'Grass',
                 'Grass',
                 'Dark',
                 'Psychic',
                 'Psychic',
                 'Grass',
                 'Fire',
                 'Dragon',
                 'Normal',
                 'Dark',
                 'Bug',
                 'Rock',
                 'Fire',
                 'Normal',
                 'Water',
                 'Bug',
                 'Water',
                 'Normal',
                 'Water',
                 'Water',
                 'Water',
                 'Psychic',
                 'Normal',
                 'Normal',
                 'Rock',
                 'Grass',
                 'Dragon',
                 'Ground',
                 'Poison',
                 'Rock',
                 'Dragon',
                 'Grass',
                 'Dark',
                 'Fighting',
                 'Ghost',
                 'Steel',
                 'Rock',
                 'Ground',
                 'Rock']
generations = [2,
               4,
               4,
               4,
               3,
               5,
               4,
               1,
               5,
               3,
               3,
               5,
               4,
               1,
               6,
               3,
               5,
               3,
               4,
               2,
               3,
               1,
               3,
               6,
               3,
               5,
               5,
               1,
               3,
               1,
               6,
               1,
               1,
               3,
               5,
               3,
               5,
               2,
               3,
               3,
               1,
               6,
               1,
               5,
               6,
               4,
               6,
               5,
               3,
               4,
               1,
               3,
               6,
               6,
               5,
               3,
               3,
               2,
               3,
               3,
               5,
               4,
               1,
               4,
               1,
               1,
               2,
               1,
               3,
               1,
               1,
               3,
               3,
               4,
               4,
               3,
               2,
               3,
               6,
               4,
               2,
               4,
               5,
               4,
               3,
               4,
               6,
               3,
               5,
               2,
               4,
               4,
               5,
               5,
               4,
               1,
               5,
               1,
               2,
               5,
               4,
               5,
               3,
               6,
               2,
               1,
               4,
               6,
               3,
               1,
               6,
               5,
               4,
               5,
               3,
               3,
               1,
               2,
               5,
               5,
               4,
               1,
               1,
               1,
               4,
               2,
               5,
               6,
               2,
               3,
               4,
               5,
               1,
               4,
               2,
               5,
               1,
               6,
               6,
               3,
               2,
               5,
               6,
               1,
               4,
               4,
               1,
               6,
               6,
               4,
               2,
               1,
               1,
               3,
               1,
               4,
               5,
               6,
               3,
               3,
               3,
               5,
               3,
               2,
               4,
               5,
               2,
               4,
               6,
               4,
               3,
               4,
               4,
               3,
               6,
               2,
               2,
               3,
               4,
               5,
               2,
               1,
               4,
               2,
               2,
               1,
               5,
               6,
               6,
               2,
               5,
               2,
               3,
               5,
               4,
               5,
               3,
               3,
               5,
               5,
               2,
               5,
               1,
               2,
               2,
               3,
               3,
               1,
               4,
               3,
               5,
               1,
               3,
               3,
               2,
               3,
               6,
               5,
               3,
               4,
               2,
               1,
               2,
               5,
               1,
               5,
               6,
               1,
               2,
               4,
               6,
               1,
               1,
               6,
               1,
               2,
               6,
               2,
               1,
               3,
               4,
               5,
               6,
               2,
               1,
               3,
               4,
               5,
               4,
               1,
               1,
               1,
               1,
               3,
               5,
               2,
               6,
               5,
               5,
               1,
               1,
               3,
               6,
               1,
               1,
               3,
               5,
               2,
               3,
               2,
               5,
               6,
               2,
               1,
               5,
               5,
               1,
               2,
               1,
               1,
               5,
               1,
               3,
               5,
               4,
               3,
               1,
               2,
               5,
               6,
               1,
               5,
               2,
               3,
               3,
               2,
               5,
               1,
               3,
               4,
               2,
               1,
               3,
               4,
               6,
               3,
               3,
               4,
               4,
               6,
               3,
               5,
               1,
               4,
               4,
               1,
               3,
               4,
               5,
               4,
               1,
               4,
               5,
               4,
               5,
               1,
               2,
               3,
               5,
               1,
               4,
               3,
               1,
               2,
               3,
               5,
               3,
               3,
               2,
               4,
               5,
               3,
               2,
               5,
               3,
               2,
               6,
               5,
               5,
               5,
               1,
               3,
               1,
               6,
               3,
               5,
               1,
               5,
               6,
               5,
               3,
               1,
               1,
               6,
               4,
               5,
               1,
               3,
               2,
               2,
               3,
               1,
               3,
               4,
               3,
               5,
               2,
               4,
               1,
               3,
               3,
               1,
               3,
               4,
               3,
               4,
               5,
               1,
               2,
               3,
               3,
               4,
               2,
               5,
               5,
               6,
               2,
               4,
               2,
               5,
               4,
               5,
               3,
               1,
               2,
               3,
               1,
               5,
               3,
               1,
               5,
               4,
               1,
               4,
               4,
               3,
               6,
               4,
               3,
               2,
               5,
               2,
               3,
               6,
               3,
               2,
               4,
               6,
               3,
               5,
               2,
               3,
               4,
               5,
               2,
               5,
               1,
               3,
               2,
               1,
               3,
               5,
               6,
               5,
               4,
               1,
               4,
               3,
               2,
               5,
               4,
               3,
               4,
               5,
               6,
               6,
               1,
               1,
               1,
               1,
               6,
               4,
               3,
               3,
               5,
               3,
               1,
               2,
               4,
               4,
               5,
               4,
               5,
               1,
               3,
               5,
               2,
               3,
               1,
               4,
               1,
               2,
               2,
               5,
               4,
               6,
               1,
               4,
               1,
               1,
               4,
               3,
               4,
               5,
               1,
               3,
               3,
               5,
               5,
               2]
poke_gens = generations
gen1_gen2_name_lengths_loop = [('Abra', 4),
                               ('Aerodactyl', 10),
                               ('Aipom', 5),
                               ('Alakazam', 8),
                               ('Ampharos', 8),
                               ('Arbok', 5),
                               ('Arcanine', 8),
                               ('Ariados', 7),
                               ('Articuno', 8),
                               ('Azumarill', 9),
                               ('Bayleef', 7),
                               ('Beedrill', 8),
                               ('Bellossom', 9),
                               ('Bellsprout', 10),
                               ('Blastoise', 9),
                               ('Blissey', 7),
                               ('Bulbasaur', 9),
                               ('Butterfree', 10),
                               ('Caterpie', 8),
                               ('Celebi', 6),
                               ('Chansey', 7),
                               ('Charizard', 9),
                               ('Charmander', 10),
                               ('Charmeleon', 10),
                               ('Chikorita', 9),
                               ('Chinchou', 8),
                               ('Clefable', 8),
                               ('Clefairy', 8),
                               ('Cleffa', 6),
                               ('Cloyster', 8),
                               ('Corsola', 7),
                               ('Crobat', 6),
                               ('Croconaw', 8),
                               ('Cubone', 6),
                               ('Cyndaquil', 9),
                               ('Delibird', 8),
                               ('Dewgong', 7),
                               ('Diglett', 7),
                               ('Ditto', 5),
                               ('Dodrio', 6),
                               ('Doduo', 5),
                               ('Donphan', 7),
                               ('Dragonair', 9),
                               ('Dragonite', 9),
                               ('Dratini', 7),
                               ('Drowzee', 7),
                               ('Dugtrio', 7),
                               ('Dunsparce', 9),
                               ('Eevee', 5),
                               ('Ekans', 5),
                               ('Electabuzz', 10),
                               ('Electrode', 9),
                               ('Elekid', 6),
                               ('Entei', 5),
                               ('Espeon', 6),
                               ('Exeggcute', 9),
                               ('Exeggutor', 9),
                               ("Farfetch'd", 10),
                               ('Fearow', 6),
                               ('Feraligatr', 10),
                               ('Flaaffy', 7),
                               ('Flareon', 7),
                               ('Forretress', 10),
                               ('Furret', 6),
                               ('Gastly', 6),
                               ('Gengar', 6),
                               ('Geodude', 7),
                               ('Girafarig', 9),
                               ('Gligar', 6),
                               ('Gloom', 5),
                               ('Golbat', 6),
                               ('Goldeen', 7),
                               ('Golduck', 7),
                               ('Golem', 5),
                               ('Granbull', 8),
                               ('Graveler', 8),
                               ('Grimer', 6),
                               ('Growlithe', 9),
                               ('Gyarados', 8),
                               ('Haunter', 7),
                               ('Heracross', 9),
                               ('Hitmonchan', 10),
                               ('Hitmonlee', 9),
                               ('Hitmontop', 9),
                               ('Ho-oh', 5),
                               ('Hoothoot', 8),
                               ('Hoppip', 6),
                               ('Horsea', 6),
                               ('Houndoom', 8),
                               ('Houndour', 8),
                               ('Hypno', 5),
                               ('Igglybuff', 9),
                               ('Ivysaur', 7),
                               ('Jigglypuff', 10),
                               ('Jolteon', 7),
                               ('Jumpluff', 8),
                               ('Jynx', 4),
                               ('Kabuto', 6),
                               ('Kabutops', 8),
                               ('Kadabra', 7),
                               ('Kakuna', 6),
                               ('Kangaskhan', 10),
                               ('Kingdra', 7),
                               ('Kingler', 7),
                               ('Koffing', 7),
                               ('Krabby', 6),
                               ('Lanturn', 7),
                               ('Lapras', 6),
                               ('Larvitar', 8),
                               ('Ledian', 6),
                               ('Ledyba', 6),
                               ('Lickitung', 9),
                               ('Lugia', 5),
                               ('Machamp', 7),
                               ('Machoke', 7),
                               ('Machop', 6),
                               ('Magby', 5),
                               ('Magcargo', 8),
                               ('Magikarp', 8),
                               ('Magmar', 6),
                               ('Magnemite', 9),
                               ('Magneton', 8),
                               ('Mankey', 6),
                               ('Mantine', 7),
                               ('Mareep', 6),
                               ('Marill', 6),
                               ('Marowak', 7),
                               ('Meowth', 6),
                               ('Metapod', 7),
                               ('Mew', 3),
                               ('Mewtwo', 6),
                               ('Miltank', 7),
                               ('Misdreavus', 10),
                               ('Moltres', 7),
                               ('Mr. Mime', 8),
                               ('Muk', 3),
                               ('Murkrow', 7),
                               ('Natu', 4),
                               ('Nidoking', 8),
                               ('Nidoqueen', 9),
                               ('Nidoranâ™€', 8),
                               ('Nidoranâ™‚', 8),
                               ('Nidorina', 8),
                               ('Nidorino', 8),
                               ('Ninetales', 9),
                               ('Noctowl', 7),
                               ('Octillery', 9),
                               ('Oddish', 6),
                               ('Omanyte', 7),
                               ('Omastar', 7),
                               ('Onix', 4),
                               ('Paras', 5),
                               ('Parasect', 8),
                               ('Persian', 7),
                               ('Phanpy', 6),
                               ('Pichu', 5),
                               ('Pidgeot', 7),
                               ('Pidgeotto', 9),
                               ('Pidgey', 6),
                               ('Pikachu', 7),
                               ('Piloswine', 9),
                               ('Pineco', 6),
                               ('Pinsir', 6),
                               ('Politoed', 8),
                               ('Poliwag', 7),
                               ('Poliwhirl', 9),
                               ('Poliwrath', 9),
                               ('Ponyta', 6),
                               ('Porygon', 7),
                               ('Porygon2', 8),
                               ('Primeape', 8),
                               ('Psyduck', 7),
                               ('Pupitar', 7),
                               ('Quagsire', 8),
                               ('Quilava', 7),
                               ('Qwilfish', 8),
                               ('Raichu', 6),
                               ('Raikou', 6),
                               ('Rapidash', 8),
                               ('Raticate', 8),
                               ('Rattata', 7),
                               ('Remoraid', 8),
                               ('Rhydon', 6),
                               ('Rhyhorn', 7),
                               ('Sandshrew', 9),
                               ('Sandslash', 9),
                               ('Scizor', 6),
                               ('Scyther', 7),
                               ('Seadra', 6),
                               ('Seaking', 7),
                               ('Seel', 4),
                               ('Sentret', 7),
                               ('Shellder', 8),
                               ('Shuckle', 7),
                               ('Skarmory', 8),
                               ('Skiploom', 8),
                               ('Slowbro', 7),
                               ('Slowking', 8),
                               ('Slowpoke', 8),
                               ('Slugma', 6),
                               ('Smeargle', 8),
                               ('Smoochum', 8),
                               ('Sneasel', 7),
                               ('Snorlax', 7),
                               ('Snubbull', 8),
                               ('Spearow', 7),
                               ('Spinarak', 8),
                               ('Squirtle', 8),
                               ('Stantler', 8),
                               ('Starmie', 7),
                               ('Staryu', 6),
                               ('Steelix', 7),
                               ('Sudowoodo', 9),
                               ('Suicune', 7),
                               ('Sunflora', 8),
                               ('Sunkern', 7),
                               ('Swinub', 6),
                               ('Tangela', 7),
                               ('Tauros', 6),
                               ('Teddiursa', 9),
                               ('Tentacool', 9),
                               ('Tentacruel', 10),
                               ('Togepi', 6),
                               ('Togetic', 7),
                               ('Totodile', 8),
                               ('Typhlosion', 10),
                               ('Tyranitar', 9),
                               ('Tyrogue', 7),
                               ('Umbreon', 7),
                               ('Unown', 5),
                               ('Ursaring', 8),
                               ('Vaporeon', 8),
                               ('Venomoth', 8),
                               ('Venonat', 7),
                               ('Venusaur', 8),
                               ('Victreebel', 10),
                               ('Vileplume', 9),
                               ('Voltorb', 7),
                               ('Vulpix', 6),
                               ('Wartortle', 9),
                               ('Weedle', 6),
                               ('Weepinbell', 10),
                               ('Weezing', 7),
                               ('Wigglytuff', 10),
                               ('Wobbuffet', 9),
                               ('Wooper', 6),
                               ('Xatu', 4),
                               ('Yanma', 5),
                               ('Zapdos', 6),
                               ('Zubat', 5)]
poke_list = [('Abomasnow', 494, 82.33333333333333),
             ('Abra', 310, 51.666666666666664),
             ('Absol', 465, 77.5),
             ('Accelgor', 495, 82.5),
             ('Aerodactyl', 515, 85.83333333333333),
             ('Aggron', 530, 88.33333333333333),
             ('Aipom', 360, 60.0),
             ('Alakazam', 500, 83.33333333333333),
             ('Alomomola', 470, 78.33333333333333),
             ('Altaria', 490, 81.66666666666667),
             ('Amaura', 362, 60.333333333333336),
             ('Ambipom', 482, 80.33333333333333),
             ('Amoonguss', 464, 77.33333333333333),
             ('Ampharos', 510, 85.0),
             ('Anorith', 355, 59.166666666666664),
             ('Arbok', 438, 73.0),
             ('Arcanine', 555, 92.5),
             ('Arceus', 720, 120.0),
             ('Archen', 401, 66.83333333333333),
             ('Archeops', 567, 94.5),
             ('Ariados', 390, 65.0),
             ('Armaldo', 495, 82.5),
             ('Aromatisse', 462, 77.0),
             ('Aron', 330, 55.0),
             ('Articuno', 580, 96.66666666666667),
             ('Audino', 445, 74.16666666666667),
             ('Aurorus', 521, 86.83333333333333),
             ('Avalugg', 514, 85.66666666666667),
             ('Axew', 320, 53.333333333333336),
             ('Azelf', 580, 96.66666666666667),
             ('Azumarill', 420, 70.0),
             ('Azurill', 190, 31.666666666666668),
             ('Bagon', 300, 50.0),
             ('Baltoy', 300, 50.0),
             ('Banette', 455, 75.83333333333333),
             ('Barbaracle', 500, 83.33333333333333),
             ('Barboach', 288, 48.0),
             ('Basculin', 460, 76.66666666666667),
             ('Bastiodon', 495, 82.5),
             ('Bayleef', 405, 67.5),
             ('Beartic', 485, 80.83333333333333),
             ('Beautifly', 395, 65.83333333333333),
             ('Beedrill', 395, 65.83333333333333),
             ('Beheeyem', 485, 80.83333333333333),
             ('Beldum', 300, 50.0),
             ('Bellossom', 490, 81.66666666666667),
             ('Bellsprout', 300, 50.0),
             ('Bergmite', 304, 50.666666666666664),
             ('Bibarel', 410, 68.33333333333333),
             ('Bidoof', 250, 41.666666666666664),
             ('Binacle', 306, 51.0),
             ('Bisharp', 490, 81.66666666666667),
             ('Blastoise', 530, 88.33333333333333),
             ('Blaziken', 530, 88.33333333333333),
             ('Blissey', 540, 90.0),
             ('Blitzle', 295, 49.166666666666664),
             ('Boldore', 390, 65.0),
             ('Bonsly', 290, 48.333333333333336),
             ('Bouffalant', 490, 81.66666666666667),
             ('Braixen', 409, 68.16666666666667),
             ('Braviary', 510, 85.0),
             ('Breloom', 460, 76.66666666666667),
             ('Bronzong', 500, 83.33333333333333),
             ('Bronzor', 300, 50.0),
             ('Budew', 280, 46.666666666666664),
             ('Buizel', 330, 55.0),
             ('Bulbasaur', 318, 53.0),
             ('Buneary', 350, 58.333333333333336),
             ('Bunnelby', 237, 39.5),
             ('Burmy', 224, 37.333333333333336),
             ('Butterfree', 395, 65.83333333333333),
             ('Cacnea', 335, 55.833333333333336),
             ('Cacturne', 475, 79.16666666666667),
             ('Camerupt', 460, 76.66666666666667),
             ('Carbink', 500, 83.33333333333333),
             ('Carnivine', 454, 75.66666666666667),
             ('Carracosta', 495, 82.5),
             ('Carvanha', 305, 50.833333333333336),
             ('Cascoon', 205, 34.166666666666664),
             ('Castform', 420, 70.0),
             ('Caterpie', 195, 32.5),
             ('Celebi', 600, 100.0),
             ('Chandelure', 520, 86.66666666666667),
             ('Chansey', 450, 75.0),
             ('Charizard', 534, 89.0),
             ('Charmander', 309, 51.5),
             ('Charmeleon', 405, 67.5),
             ('Chatot', 411, 68.5),
             ('Cherrim', 450, 75.0),
             ('Cherubi', 275, 45.833333333333336),
             ('Chesnaught', 530, 88.33333333333333),
             ('Chespin', 313, 52.166666666666664),
             ('Chikorita', 318, 53.0),
             ('Chimchar', 309, 51.5),
             ('Chimecho', 425, 70.83333333333333),
             ('Chinchou', 330, 55.0),
             ('Chingling', 285, 47.5),
             ('Cinccino', 470, 78.33333333333333),
             ('Clamperl', 345, 57.5),
             ('Clauncher', 330, 55.0),
             ('Clawitzer', 500, 83.33333333333333),
             ('Claydol', 500, 83.33333333333333),
             ('Clefable', 483, 80.5),
             ('Clefairy', 323, 53.833333333333336),
             ('Cleffa', 218, 36.333333333333336),
             ('Cloyster', 525, 87.5),
             ('Cobalion', 580, 96.66666666666667),
             ('Cofagrigus', 483, 80.5),
             ('Combee', 244, 40.666666666666664),
             ('Combusken', 405, 67.5),
             ('Conkeldurr', 505, 84.16666666666667),
             ('Corphish', 308, 51.333333333333336),
             ('Corsola', 380, 63.333333333333336),
             ('Cottonee', 280, 46.666666666666664),
             ('Cradily', 495, 82.5),
             ('Cranidos', 350, 58.333333333333336),
             ('Crawdaunt', 468, 78.0),
             ('Cresselia', 600, 100.0),
             ('Croagunk', 300, 50.0),
             ('Crobat', 535, 89.16666666666667),
             ('Croconaw', 405, 67.5),
             ('Crustle', 475, 79.16666666666667),
             ('Cryogonal', 485, 80.83333333333333),
             ('Cubchoo', 305, 50.833333333333336),
             ('Cubone', 320, 53.333333333333336),
             ('Cyndaquil', 309, 51.5),
             ('Darkrai', 600, 100.0),
             ('DarmanitanStandard Mode', 480, 80.0),
             ('DarmanitanZen Mode', 540, 90.0),
             ('Darumaka', 315, 52.5),
             ('Dedenne', 431, 71.83333333333333),
             ('Deerling', 335, 55.833333333333336),
             ('Deino', 300, 50.0),
             ('Delcatty', 380, 63.333333333333336),
             ('Delibird', 330, 55.0),
             ('Delphox', 534, 89.0),
             ('Dewgong', 475, 79.16666666666667),
             ('Dewott', 413, 68.83333333333333),
             ('Dialga', 680, 113.33333333333333),
             ('Diancie', 600, 100.0),
             ('Diggersby', 423, 70.5),
             ('Diglett', 265, 44.166666666666664),
             ('Ditto', 288, 48.0),
             ('Dodrio', 460, 76.66666666666667),
             ('Doduo', 310, 51.666666666666664),
             ('Donphan', 500, 83.33333333333333),
             ('Doublade', 448, 74.66666666666667),
             ('Dragalge', 494, 82.33333333333333),
             ('Dragonair', 420, 70.0),
             ('Dragonite', 600, 100.0),
             ('Drapion', 500, 83.33333333333333),
             ('Dratini', 300, 50.0),
             ('Drifblim', 498, 83.0),
             ('Drifloon', 348, 58.0),
             ('Drilbur', 328, 54.666666666666664),
             ('Drowzee', 328, 54.666666666666664),
             ('Druddigon', 485, 80.83333333333333),
             ('Ducklett', 305, 50.833333333333336),
             ('Dugtrio', 405, 67.5),
             ('Dunsparce', 415, 69.16666666666667),
             ('Duosion', 370, 61.666666666666664),
             ('Durant', 484, 80.66666666666667),
             ('Dusclops', 455, 75.83333333333333),
             ('Dusknoir', 525, 87.5),
             ('Duskull', 295, 49.166666666666664),
             ('Dustox', 385, 64.16666666666667),
             ('Dwebble', 325, 54.166666666666664),
             ('Eelektrik', 405, 67.5),
             ('Eelektross', 515, 85.83333333333333),
             ('Eevee', 325, 54.166666666666664),
             ('Ekans', 288, 48.0),
             ('Electabuzz', 490, 81.66666666666667),
             ('Electivire', 540, 90.0),
             ('Electrike', 295, 49.166666666666664),
             ('Electrode', 480, 80.0),
             ('Elekid', 360, 60.0),
             ('Elgyem', 335, 55.833333333333336),
             ('Emboar', 528, 88.0),
             ('Emolga', 428, 71.33333333333333),
             ('Empoleon', 530, 88.33333333333333),
             ('Entei', 580, 96.66666666666667),
             ('Escavalier', 495, 82.5),
             ('Espeon', 525, 87.5),
             ('Espurr', 355, 59.166666666666664),
             ('Excadrill', 508, 84.66666666666667),
             ('Exeggcute', 325, 54.166666666666664),
             ('Exeggutor', 520, 86.66666666666667),
             ('Exploud', 490, 81.66666666666667),
             ("Farfetch'd", 352, 58.666666666666664),
             ('Fearow', 442, 73.66666666666667),
             ('Feebas', 200, 33.333333333333336),
             ('Fennekin', 307, 51.166666666666664),
             ('Feraligatr', 530, 88.33333333333333),
             ('Ferroseed', 305, 50.833333333333336),
             ('Ferrothorn', 489, 81.5),
             ('Finneon', 330, 55.0),
             ('Flaaffy', 365, 60.833333333333336),
             ('FlabÃ©bÃ©', 303, 50.5),
             ('Flareon', 525, 87.5),
             ('Fletchinder', 382, 63.666666666666664),
             ('Fletchling', 278, 46.333333333333336),
             ('Floatzel', 495, 82.5),
             ('Floette', 371, 61.833333333333336),
             ('Florges', 552, 92.0),
             ('Flygon', 520, 86.66666666666667),
             ('Foongus', 294, 49.0),
             ('Forretress', 465, 77.5),
             ('Fraxure', 410, 68.33333333333333),
             ('Frillish', 335, 55.833333333333336),
             ('Froakie', 314, 52.333333333333336),
             ('Frogadier', 405, 67.5),
             ('Froslass', 480, 80.0),
             ('Furfrou', 472, 78.66666666666667),
             ('Furret', 415, 69.16666666666667),
             ('Gabite', 410, 68.33333333333333),
             ('Gallade', 518, 86.33333333333333),
             ('Galvantula', 472, 78.66666666666667),
             ('Garbodor', 474, 79.0),
             ('Garchomp', 600, 100.0),
             ('Gardevoir', 518, 86.33333333333333),
             ('Gastly', 310, 51.666666666666664),
             ('Gastrodon', 475, 79.16666666666667),
             ('Genesect', 600, 100.0),
             ('Gengar', 500, 83.33333333333333),
             ('Geodude', 300, 50.0),
             ('Gible', 300, 50.0),
             ('Gigalith', 515, 85.83333333333333),
             ('Girafarig', 455, 75.83333333333333),
             ('Glaceon', 525, 87.5),
             ('Glalie', 480, 80.0),
             ('Glameow', 310, 51.666666666666664),
             ('Gligar', 430, 71.66666666666667),
             ('Gliscor', 510, 85.0),
             ('Gloom', 395, 65.83333333333333),
             ('Gogoat', 531, 88.5),
             ('Golbat', 455, 75.83333333333333),
             ('Goldeen', 320, 53.333333333333336),
             ('Golduck', 500, 83.33333333333333),
             ('Golem', 495, 82.5),
             ('Golett', 303, 50.5),
             ('Golurk', 483, 80.5),
             ('Goodra', 600, 100.0),
             ('Goomy', 300, 50.0),
             ('Gorebyss', 485, 80.83333333333333),
             ('Gothita', 290, 48.333333333333336),
             ('Gothitelle', 490, 81.66666666666667),
             ('Gothorita', 390, 65.0),
             ('Granbull', 450, 75.0),
             ('Graveler', 390, 65.0),
             ('Greninja', 530, 88.33333333333333),
             ('Grimer', 325, 54.166666666666664),
             ('Grotle', 405, 67.5),
             ('Groudon', 670, 111.66666666666667),
             ('GroudonPrimal Groudon', 770, 128.33333333333334),
             ('Grovyle', 405, 67.5),
             ('Growlithe', 350, 58.333333333333336),
             ('Grumpig', 470, 78.33333333333333),
             ('Gulpin', 302, 50.333333333333336),
             ('Gurdurr', 405, 67.5),
             ('Gyarados', 540, 90.0),
             ('Happiny', 220, 36.666666666666664),
             ('Hariyama', 474, 79.0),
             ('Haunter', 405, 67.5),
             ('Hawlucha', 500, 83.33333333333333),
             ('Haxorus', 540, 90.0),
             ('Heatmor', 484, 80.66666666666667),
             ('Heatran', 600, 100.0),
             ('Heliolisk', 481, 80.16666666666667),
             ('Helioptile', 289, 48.166666666666664),
             ('Heracross', 500, 83.33333333333333),
             ('Herdier', 370, 61.666666666666664),
             ('Hippopotas', 330, 55.0),
             ('Hippowdon', 525, 87.5),
             ('Hitmonchan', 455, 75.83333333333333),
             ('Hitmonlee', 455, 75.83333333333333),
             ('Hitmontop', 455, 75.83333333333333),
             ('Ho-oh', 680, 113.33333333333333),
             ('Honchkrow', 505, 84.16666666666667),
             ('Honedge', 325, 54.166666666666664),
             ('Hoothoot', 262, 43.666666666666664),
             ('Hoppip', 250, 41.666666666666664),
             ('Horsea', 295, 49.166666666666664),
             ('Houndoom', 500, 83.33333333333333),
             ('Houndour', 330, 55.0),
             ('Huntail', 485, 80.83333333333333),
             ('Hydreigon', 600, 100.0),
             ('Hypno', 483, 80.5),
             ('Igglybuff', 210, 35.0),
             ('Illumise', 400, 66.66666666666667),
             ('Infernape', 534, 89.0),
             ('Inkay', 288, 48.0),
             ('Ivysaur', 405, 67.5),
             ('Jellicent', 480, 80.0),
             ('Jigglypuff', 270, 45.0),
             ('Jirachi', 600, 100.0),
             ('Jolteon', 525, 87.5),
             ('Joltik', 319, 53.166666666666664),
             ('Jumpluff', 460, 76.66666666666667),
             ('Jynx', 455, 75.83333333333333),
             ('Kabuto', 355, 59.166666666666664),
             ('Kabutops', 495, 82.5),
             ('Kadabra', 400, 66.66666666666667),
             ('Kakuna', 205, 34.166666666666664),
             ('Kangaskhan', 490, 81.66666666666667),
             ('Karrablast', 315, 52.5),
             ('Kecleon', 440, 73.33333333333333),
             ('Kingdra', 540, 90.0),
             ('Kingler', 475, 79.16666666666667),
             ('Kirlia', 278, 46.333333333333336),
             ('Klang', 440, 73.33333333333333),
             ('Klefki', 470, 78.33333333333333),
             ('Klink', 300, 50.0),
             ('Klinklang', 520, 86.66666666666667),
             ('Koffing', 340, 56.666666666666664),
             ('Krabby', 325, 54.166666666666664),
             ('Kricketot', 194, 32.333333333333336),
             ('Kricketune', 384, 64.0),
             ('Krokorok', 351, 58.5),
             ('Krookodile', 519, 86.5),
             ('Kyogre', 670, 111.66666666666667),
             ('KyogrePrimal Kyogre', 770, 128.33333333333334),
             ('Kyurem', 660, 110.0),
             ('KyuremBlack Kyurem', 700, 116.66666666666667),
             ('KyuremWhite Kyurem', 700, 116.66666666666667),
             ('Lairon', 430, 71.66666666666667),
             ('Lampent', 370, 61.666666666666664),
             ('Lanturn', 460, 76.66666666666667),
             ('Lapras', 535, 89.16666666666667),
             ('Larvesta', 360, 60.0),
             ('Larvitar', 300, 50.0),
             ('Latias', 600, 100.0),
             ('Latios', 600, 100.0),
             ('Leafeon', 525, 87.5),
             ('Leavanny', 500, 83.33333333333333),
             ('Ledian', 390, 65.0),
             ('Ledyba', 265, 44.166666666666664),
             ('Lickilicky', 515, 85.83333333333333),
             ('Lickitung', 385, 64.16666666666667),
             ('Liepard', 446, 74.33333333333333),
             ('Lileep', 355, 59.166666666666664),
             ('Lilligant', 480, 80.0),
             ('Lillipup', 275, 45.833333333333336),
             ('Linoone', 420, 70.0),
             ('Litleo', 369, 61.5),
             ('Litwick', 275, 45.833333333333336),
             ('Lombre', 340, 56.666666666666664),
             ('Lopunny', 480, 80.0),
             ('Lotad', 220, 36.666666666666664),
             ('Loudred', 360, 60.0),
             ('Lucario', 525, 87.5),
             ('Ludicolo', 480, 80.0),
             ('Lugia', 680, 113.33333333333333),
             ('Lumineon', 460, 76.66666666666667),
             ('Lunatone', 440, 73.33333333333333),
             ('Luvdisc', 330, 55.0),
             ('Luxio', 363, 60.5),
             ('Luxray', 523, 87.16666666666667),
             ('Machamp', 505, 84.16666666666667),
             ('Machoke', 405, 67.5),
             ('Machop', 305, 50.833333333333336),
             ('Magby', 365, 60.833333333333336),
             ('Magcargo', 410, 68.33333333333333),
             ('Magikarp', 200, 33.333333333333336),
             ('Magmar', 495, 82.5),
             ('Magmortar', 540, 90.0),
             ('Magnemite', 325, 54.166666666666664),
             ('Magneton', 465, 77.5),
             ('Magnezone', 535, 89.16666666666667),
             ('Makuhita', 237, 39.5),
             ('Malamar', 482, 80.33333333333333),
             ('Mamoswine', 530, 88.33333333333333),
             ('Manaphy', 600, 100.0),
             ('Mandibuzz', 510, 85.0),
             ('Manectric', 475, 79.16666666666667),
             ('Mankey', 305, 50.833333333333336),
             ('Mantine', 465, 77.5),
             ('Mantyke', 345, 57.5),
             ('Maractus', 461, 76.83333333333333),
             ('Mareep', 280, 46.666666666666664),
             ('Marill', 250, 41.666666666666664),
             ('Marowak', 425, 70.83333333333333),
             ('Marshtomp', 405, 67.5),
             ('Masquerain', 414, 69.0),
             ('Mawile', 380, 63.333333333333336),
             ('Medicham', 410, 68.33333333333333),
             ('Meditite', 280, 46.666666666666664),
             ('MeowsticFemale', 466, 77.66666666666667),
             ('MeowsticMale', 466, 77.66666666666667),
             ('Meowth', 290, 48.333333333333336),
             ('Mesprit', 580, 96.66666666666667),
             ('Metagross', 600, 100.0),
             ('Metang', 420, 70.0),
             ('Metapod', 205, 34.166666666666664),
             ('Mew', 600, 100.0),
             ('Mewtwo', 680, 113.33333333333333),
             ('Mienfoo', 350, 58.333333333333336),
             ('Mienshao', 510, 85.0),
             ('Mightyena', 420, 70.0),
             ('Milotic', 540, 90.0),
             ('Miltank', 490, 81.66666666666667),
             ('Mime Jr.', 310, 51.666666666666664),
             ('Minccino', 300, 50.0),
             ('Minun', 405, 67.5),
             ('Misdreavus', 435, 72.5),
             ('Mismagius', 495, 82.5),
             ('Moltres', 580, 96.66666666666667),
             ('Monferno', 405, 67.5),
             ('Mothim', 424, 70.66666666666667),
             ('Mr. Mime', 460, 76.66666666666667),
             ('Mudkip', 310, 51.666666666666664),
             ('Muk', 500, 83.33333333333333),
             ('Munchlax', 390, 65.0),
             ('Munna', 292, 48.666666666666664),
             ('Murkrow', 405, 67.5),
             ('Musharna', 487, 81.16666666666667),
             ('Natu', 320, 53.333333333333336),
             ('Nidoking', 505, 84.16666666666667),
             ('Nidoqueen', 505, 84.16666666666667),
             ('Nidoranâ™€', 275, 45.833333333333336),
             ('Nidoranâ™‚', 273, 45.5),
             ('Nidorina', 365, 60.833333333333336),
             ('Nidorino', 365, 60.833333333333336),
             ('Nincada', 266, 44.333333333333336),
             ('Ninetales', 505, 84.16666666666667),
             ('Ninjask', 456, 76.0),
             ('Noctowl', 442, 73.66666666666667),
             ('Noibat', 245, 40.833333333333336),
             ('Noivern', 535, 89.16666666666667),
             ('Nosepass', 375, 62.5),
             ('Numel', 305, 50.833333333333336),
             ('Nuzleaf', 340, 56.666666666666664),
             ('Octillery', 480, 80.0),
             ('Oddish', 320, 53.333333333333336),
             ('Omanyte', 355, 59.166666666666664),
             ('Omastar', 495, 82.5),
             ('Onix', 385, 64.16666666666667),
             ('Oshawott', 308, 51.333333333333336),
             ('Pachirisu', 405, 67.5),
             ('Palkia', 680, 113.33333333333333),
             ('Palpitoad', 384, 64.0),
             ('Pancham', 348, 58.0),
             ('Pangoro', 495, 82.5),
             ('Panpour', 316, 52.666666666666664),
             ('Pansage', 316, 52.666666666666664),
             ('Pansear', 316, 52.666666666666664),
             ('Paras', 285, 47.5),
             ('Parasect', 405, 67.5),
             ('Patrat', 255, 42.5),
             ('Pawniard', 340, 56.666666666666664),
             ('Pelipper', 430, 71.66666666666667),
             ('Persian', 440, 73.33333333333333),
             ('Petilil', 280, 46.666666666666664),
             ('Phanpy', 330, 55.0),
             ('Phantump', 309, 51.5),
             ('Phione', 480, 80.0),
             ('Pichu', 205, 34.166666666666664),
             ('Pidgeot', 479, 79.83333333333333),
             ('Pidgeotto', 349, 58.166666666666664),
             ('Pidgey', 251, 41.833333333333336),
             ('Pidove', 264, 44.0),
             ('Pignite', 418, 69.66666666666667),
             ('Pikachu', 320, 53.333333333333336),
             ('Piloswine', 450, 75.0),
             ('Pineco', 290, 48.333333333333336),
             ('Pinsir', 500, 83.33333333333333),
             ('Piplup', 314, 52.333333333333336),
             ('Plusle', 405, 67.5),
             ('Politoed', 500, 83.33333333333333),
             ('Poliwag', 300, 50.0),
             ('Poliwhirl', 385, 64.16666666666667),
             ('Poliwrath', 510, 85.0),
             ('Ponyta', 410, 68.33333333333333),
             ('Poochyena', 220, 36.666666666666664),
             ('Porygon', 395, 65.83333333333333),
             ('Porygon-Z', 535, 89.16666666666667),
             ('Porygon2', 515, 85.83333333333333),
             ('Primeape', 455, 75.83333333333333),
             ('Prinplup', 405, 67.5),
             ('Probopass', 525, 87.5),
             ('Psyduck', 320, 53.333333333333336),
             ('Pupitar', 410, 68.33333333333333),
             ('Purrloin', 281, 46.833333333333336),
             ('Purugly', 452, 75.33333333333333),
             ('Pyroar', 507, 84.5),
             ('Quagsire', 430, 71.66666666666667),
             ('Quilava', 405, 67.5),
             ('Quilladin', 405, 67.5),
             ('Qwilfish', 430, 71.66666666666667),
             ('Raichu', 485, 80.83333333333333),
             ('Raikou', 580, 96.66666666666667),
             ('Ralts', 198, 33.0),
             ('Rampardos', 495, 82.5),
             ('Rapidash', 500, 83.33333333333333),
             ('Raticate', 413, 68.83333333333333),
             ('Rattata', 253, 42.166666666666664),
             ('Rayquaza', 680, 113.33333333333333),
             ('Regice', 580, 96.66666666666667),
             ('Regigigas', 670, 111.66666666666667),
             ('Regirock', 580, 96.66666666666667),
             ('Registeel', 580, 96.66666666666667),
             ('Relicanth', 485, 80.83333333333333),
             ('Remoraid', 300, 50.0),
             ('Reshiram', 680, 113.33333333333333),
             ('Reuniclus', 490, 81.66666666666667),
             ('Rhydon', 485, 80.83333333333333),
             ('Rhyhorn', 345, 57.5),
             ('Rhyperior', 535, 89.16666666666667),
             ('Riolu', 285, 47.5),
             ('Roggenrola', 280, 46.666666666666664),
             ('Roselia', 400, 66.66666666666667),
             ('Roserade', 515, 85.83333333333333),
             ('Rotom', 440, 73.33333333333333),
             ('RotomFan Rotom', 520, 86.66666666666667),
             ('RotomFrost Rotom', 520, 86.66666666666667),
             ('RotomHeat Rotom', 520, 86.66666666666667),
             ('RotomMow Rotom', 520, 86.66666666666667),
             ('RotomWash Rotom', 520, 86.66666666666667),
             ('Rufflet', 350, 58.333333333333336),
             ('Sableye', 380, 63.333333333333336),
             ('Salamence', 600, 100.0),
             ('Samurott', 528, 88.0),
             ('Sandile', 292, 48.666666666666664),
             ('Sandshrew', 300, 50.0),
             ('Sandslash', 450, 75.0),
             ('Sawk', 465, 77.5),
             ('Sawsbuck', 475, 79.16666666666667),
             ('Scatterbug', 200, 33.333333333333336),
             ('Sceptile', 530, 88.33333333333333),
             ('Scizor', 500, 83.33333333333333),
             ('Scolipede', 485, 80.83333333333333),
             ('Scrafty', 488, 81.33333333333333),
             ('Scraggy', 348, 58.0),
             ('Scyther', 500, 83.33333333333333),
             ('Seadra', 440, 73.33333333333333),
             ('Seaking', 450, 75.0),
             ('Sealeo', 410, 68.33333333333333),
             ('Seedot', 220, 36.666666666666664),
             ('Seel', 325, 54.166666666666664),
             ('Seismitoad', 509, 84.83333333333333),
             ('Sentret', 215, 35.833333333333336),
             ('Serperior', 528, 88.0),
             ('Servine', 413, 68.83333333333333),
             ('Seviper', 458, 76.33333333333333),
             ('Sewaddle', 310, 51.666666666666664),
             ('Sharpedo', 460, 76.66666666666667),
             ('Shedinja', 236, 39.333333333333336),
             ('Shelgon', 420, 70.0),
             ('Shellder', 305, 50.833333333333336),
             ('Shellos', 325, 54.166666666666664),
             ('Shelmet', 305, 50.833333333333336),
             ('Shieldon', 350, 58.333333333333336),
             ('Shiftry', 480, 80.0),
             ('Shinx', 263, 43.833333333333336),
             ('Shroomish', 295, 49.166666666666664),
             ('Shuckle', 505, 84.16666666666667),
             ('Shuppet', 295, 49.166666666666664),
             ('Sigilyph', 490, 81.66666666666667),
             ('Silcoon', 205, 34.166666666666664),
             ('Simipour', 498, 83.0),
             ('Simisage', 498, 83.0),
             ('Simisear', 498, 83.0),
             ('Skarmory', 465, 77.5),
             ('Skiddo', 350, 58.333333333333336),
             ('Skiploom', 340, 56.666666666666664),
             ('Skitty', 260, 43.333333333333336),
             ('Skorupi', 330, 55.0),
             ('Skrelp', 320, 53.333333333333336),
             ('Skuntank', 479, 79.83333333333333),
             ('Slaking', 670, 111.66666666666667),
             ('Slakoth', 280, 46.666666666666664),
             ('Sliggoo', 452, 75.33333333333333),
             ('Slowbro', 490, 81.66666666666667),
             ('Slowking', 490, 81.66666666666667),
             ('Slowpoke', 315, 52.5),
             ('Slugma', 250, 41.666666666666664),
             ('Slurpuff', 480, 80.0),
             ('Smeargle', 250, 41.666666666666664),
             ('Smoochum', 305, 50.833333333333336),
             ('Sneasel', 430, 71.66666666666667),
             ('Snivy', 308, 51.333333333333336),
             ('Snorlax', 540, 90.0),
             ('Snorunt', 300, 50.0),
             ('Snover', 334, 55.666666666666664),
             ('Snubbull', 300, 50.0),
             ('Solosis', 290, 48.333333333333336),
             ('Solrock', 440, 73.33333333333333),
             ('Spearow', 262, 43.666666666666664),
             ('Spewpa', 213, 35.5),
             ('Spheal', 290, 48.333333333333336),
             ('Spinarak', 250, 41.666666666666664),
             ('Spinda', 360, 60.0),
             ('Spiritomb', 485, 80.83333333333333),
             ('Spoink', 330, 55.0),
             ('Spritzee', 341, 56.833333333333336),
             ('Squirtle', 314, 52.333333333333336),
             ('Stantler', 465, 77.5),
             ('Staraptor', 485, 80.83333333333333),
             ('Staravia', 340, 56.666666666666664),
             ('Starly', 245, 40.833333333333336),
             ('Starmie', 520, 86.66666666666667),
             ('Staryu', 340, 56.666666666666664),
             ('Steelix', 510, 85.0),
             ('Stoutland', 500, 83.33333333333333),
             ('Stunfisk', 471, 78.5),
             ('Stunky', 329, 54.833333333333336),
             ('Sudowoodo', 410, 68.33333333333333),
             ('Suicune', 580, 96.66666666666667),
             ('Sunflora', 425, 70.83333333333333),
             ('Sunkern', 180, 30.0),
             ('Surskit', 269, 44.833333333333336),
             ('Swablu', 310, 51.666666666666664),
             ('Swadloon', 380, 63.333333333333336),
             ('Swalot', 467, 77.83333333333333),
             ('Swampert', 535, 89.16666666666667),
             ('Swanna', 473, 78.83333333333333),
             ('Swellow', 430, 71.66666666666667),
             ('Swinub', 250, 41.666666666666664),
             ('Swirlix', 341, 56.833333333333336),
             ('Swoobat', 425, 70.83333333333333),
             ('Sylveon', 525, 87.5),
             ('Taillow', 270, 45.0),
             ('Talonflame', 499, 83.16666666666667),
             ('Tangela', 435, 72.5),
             ('Tangrowth', 535, 89.16666666666667),
             ('Tauros', 490, 81.66666666666667),
             ('Teddiursa', 330, 55.0),
             ('Tentacool', 335, 55.833333333333336),
             ('Tentacruel', 515, 85.83333333333333),
             ('Tepig', 308, 51.333333333333336),
             ('Terrakion', 580, 96.66666666666667),
             ('Throh', 465, 77.5),
             ('Timburr', 305, 50.833333333333336),
             ('Tirtouga', 355, 59.166666666666664),
             ('Togekiss', 545, 90.83333333333333),
             ('Togepi', 245, 40.833333333333336),
             ('Togetic', 405, 67.5),
             ('Torchic', 310, 51.666666666666664),
             ('Torkoal', 470, 78.33333333333333),
             ('Torterra', 525, 87.5),
             ('Totodile', 314, 52.333333333333336),
             ('Toxicroak', 490, 81.66666666666667),
             ('Tranquill', 358, 59.666666666666664),
             ('Trapinch', 290, 48.333333333333336),
             ('Treecko', 310, 51.666666666666664),
             ('Trevenant', 474, 79.0),
             ('Tropius', 460, 76.66666666666667),
             ('Trubbish', 329, 54.833333333333336),
             ('Turtwig', 318, 53.0),
             ('Tympole', 294, 49.0),
             ('Tynamo', 275, 45.833333333333336),
             ('Typhlosion', 534, 89.0),
             ('Tyranitar', 600, 100.0),
             ('Tyrantrum', 521, 86.83333333333333),
             ('Tyrogue', 210, 35.0),
             ('Tyrunt', 362, 60.333333333333336),
             ('Umbreon', 525, 87.5),
             ('Unfezant', 488, 81.33333333333333),
             ('Unown', 336, 56.0),
             ('Ursaring', 500, 83.33333333333333),
             ('Uxie', 580, 96.66666666666667),
             ('Vanillish', 395, 65.83333333333333),
             ('Vanillite', 305, 50.833333333333336),
             ('Vanilluxe', 535, 89.16666666666667),
             ('Vaporeon', 525, 87.5),
             ('Venipede', 260, 43.333333333333336),
             ('Venomoth', 450, 75.0),
             ('Venonat', 305, 50.833333333333336),
             ('Venusaur', 525, 87.5),
             ('Vespiquen', 474, 79.0),
             ('Vibrava', 340, 56.666666666666664),
             ('Victini', 600, 100.0),
             ('Victreebel', 490, 81.66666666666667),
             ('Vigoroth', 440, 73.33333333333333),
             ('Vileplume', 490, 81.66666666666667),
             ('Virizion', 580, 96.66666666666667),
             ('Vivillon', 411, 68.5),
             ('Volbeat', 400, 66.66666666666667),
             ('Volcanion', 600, 100.0),
             ('Volcarona', 550, 91.66666666666667),
             ('Voltorb', 330, 55.0),
             ('Vullaby', 370, 61.666666666666664),
             ('Vulpix', 299, 49.833333333333336),
             ('Wailmer', 400, 66.66666666666667),
             ('Wailord', 500, 83.33333333333333),
             ('Walrein', 530, 88.33333333333333),
             ('Wartortle', 405, 67.5),
             ('Watchog', 420, 70.0),
             ('Weavile', 510, 85.0),
             ('Weedle', 195, 32.5),
             ('Weepinbell', 390, 65.0),
             ('Weezing', 490, 81.66666666666667),
             ('Whimsicott', 480, 80.0),
             ('Whirlipede', 360, 60.0),
             ('Whiscash', 468, 78.0),
             ('Whismur', 240, 40.0),
             ('Wigglytuff', 435, 72.5),
             ('Wingull', 270, 45.0),
             ('Wobbuffet', 405, 67.5),
             ('Woobat', 313, 52.166666666666664),
             ('Wooper', 210, 35.0),
             ('WormadamPlant Cloak', 424, 70.66666666666667),
             ('WormadamSandy Cloak', 424, 70.66666666666667),
             ('WormadamTrash Cloak', 424, 70.66666666666667),
             ('Wurmple', 195, 32.5),
             ('Wynaut', 260, 43.333333333333336),
             ('Xatu', 470, 78.33333333333333),
             ('Xerneas', 680, 113.33333333333333),
             ('Yamask', 303, 50.5),
             ('Yanma', 390, 65.0),
             ('Yanmega', 515, 85.83333333333333),
             ('Yveltal', 680, 113.33333333333333),
             ('Zangoose', 458, 76.33333333333333),
             ('Zapdos', 580, 96.66666666666667),
             ('Zebstrika', 497, 82.83333333333333),
             ('Zekrom', 680, 113.33333333333333),
             ('Zigzagoon', 240, 40.0),
             ('Zoroark', 510, 85.0),
             ('Zorua', 330, 55.0),
             ('Zubat', 245, 40.833333333333336),
             ('Zweilous', 420, 70.0)]
stats = np.array([np.array([90, 92, 75, 92, 85, 60]),
                  np.array([25, 20, 15, 105, 55, 90]),
                  np.array([65, 130, 60, 75, 60, 75]),
                  np.array([80, 70, 40, 100, 60, 145]),
                  np.array([80, 105, 65, 60, 75, 130]),
                  np.array([70, 110, 180, 60, 60, 50]),
                  np.array([55, 70, 55, 40, 55, 85]),
                  np.array([55, 50, 45, 135, 95, 120]),
                  np.array([165, 75, 80, 40, 45, 65]),
                  np.array([75, 70, 90, 70, 105, 80]),
                  np.array([77, 59, 50, 67, 63, 46]),
                  np.array([75, 100, 66, 60, 66, 115]),
                  np.array([114, 85, 70, 85, 80, 30]),
                  np.array([90, 75, 85, 115, 90, 55]),
                  np.array([45, 95, 50, 40, 50, 75]),
                  np.array([60, 85, 69, 65, 79, 80]),
                  np.array([90, 110, 80, 100, 80, 95]),
                  np.array([120, 120, 120, 120, 120, 120]),
                  np.array([55, 112, 45, 74, 45, 70]),
                  np.array([75, 140, 65, 112, 65, 110]),
                  np.array([70, 90, 70, 60, 60, 40]),
                  np.array([75, 125, 100, 70, 80, 45]),
                  np.array([101, 72, 72, 99, 89, 29]),
                  np.array([50, 70, 100, 40, 40, 30]),
                  np.array([90, 85, 100, 95, 125, 85]),
                  np.array([103, 60, 86, 60, 86, 50]),
                  np.array([123, 77, 72, 99, 92, 58]),
                  np.array([95, 117, 184, 44, 46, 28]),
                  np.array([46, 87, 60, 30, 40, 57]),
                  np.array([75, 125, 70, 125, 70, 115]),
                  np.array([100, 50, 80, 60, 80, 50]),
                  np.array([50, 20, 40, 20, 40, 20]),
                  np.array([45, 75, 60, 40, 30, 50]),
                  np.array([40, 40, 55, 40, 70, 55]),
                  np.array([64, 115, 65, 83, 63, 65]),
                  np.array([72, 105, 115, 54, 86, 68]),
                  np.array([50, 48, 43, 46, 41, 60]),
                  np.array([70, 92, 65, 80, 55, 98]),
                  np.array([60, 52, 168, 47, 138, 30]),
                  np.array([60, 62, 80, 63, 80, 60]),
                  np.array([95, 110, 80, 70, 80, 50]),
                  np.array([60, 70, 50, 100, 50, 65]),
                  np.array([65, 90, 40, 45, 80, 75]),
                  np.array([75, 75, 75, 125, 95, 40]),
                  np.array([40, 55, 80, 35, 60, 30]),
                  np.array([75, 80, 95, 90, 100, 50]),
                  np.array([50, 75, 35, 70, 30, 40]),
                  np.array([55, 69, 85, 32, 35, 28]),
                  np.array([79, 85, 60, 55, 60, 71]),
                  np.array([59, 45, 40, 35, 40, 31]),
                  np.array([42, 52, 67, 39, 56, 50]),
                  np.array([65, 125, 100, 60, 70, 70]),
                  np.array([79, 83, 100, 85, 105, 78]),
                  np.array([80, 120, 70, 110, 70, 80]),
                  np.array([255, 10, 10, 75, 135, 55]),
                  np.array([45, 60, 32, 50, 32, 76]),
                  np.array([70, 105, 105, 50, 40, 20]),
                  np.array([50, 80, 95, 10, 45, 10]),
                  np.array([95, 110, 95, 40, 95, 55]),
                  np.array([59, 59, 58, 90, 70, 73]),
                  np.array([100, 123, 75, 57, 75, 80]),
                  np.array([60, 130, 80, 60, 60, 70]),
                  np.array([67, 89, 116, 79, 116, 33]),
                  np.array([57, 24, 86, 24, 86, 23]),
                  np.array([40, 30, 35, 50, 70, 55]),
                  np.array([55, 65, 35, 60, 30, 85]),
                  np.array([45, 49, 49, 65, 65, 45]),
                  np.array([55, 66, 44, 44, 56, 85]),
                  np.array([38, 36, 38, 32, 36, 57]),
                  np.array([40, 29, 45, 29, 45, 36]),
                  np.array([60, 45, 50, 90, 80, 70]),
                  np.array([50, 85, 40, 85, 40, 35]),
                  np.array([70, 115, 60, 115, 60, 55]),
                  np.array([70, 100, 70, 105, 75, 40]),
                  np.array([50, 50, 150, 50, 150, 50]),
                  np.array([74, 100, 72, 90, 72, 46]),
                  np.array([74, 108, 133, 83, 65, 32]),
                  np.array([45, 90, 20, 65, 20, 65]),
                  np.array([50, 35, 55, 25, 25, 15]),
                  np.array([70, 70, 70, 70, 70, 70]),
                  np.array([45, 30, 35, 20, 20, 45]),
                  np.array([100, 100, 100, 100, 100, 100]),
                  np.array([60, 55, 90, 145, 90, 80]),
                  np.array([250, 5, 5, 35, 105, 50]),
                  np.array([78, 84, 78, 109, 85, 100]),
                  np.array([39, 52, 43, 60, 50, 65]),
                  np.array([58, 64, 58, 80, 65, 80]),
                  np.array([76, 65, 45, 92, 42, 91]),
                  np.array([70, 60, 70, 87, 78, 85]),
                  np.array([45, 35, 45, 62, 53, 35]),
                  np.array([88, 107, 122, 74, 75, 64]),
                  np.array([56, 61, 65, 48, 45, 38]),
                  np.array([45, 49, 65, 49, 65, 45]),
                  np.array([44, 58, 44, 58, 44, 61]),
                  np.array([65, 50, 70, 95, 80, 65]),
                  np.array([75, 38, 38, 56, 56, 67]),
                  np.array([45, 30, 50, 65, 50, 45]),
                  np.array([75, 95, 60, 65, 60, 115]),
                  np.array([35, 64, 85, 74, 55, 32]),
                  np.array([50, 53, 62, 58, 63, 44]),
                  np.array([71, 73, 88, 120, 89, 59]),
                  np.array([60, 70, 105, 70, 120, 75]),
                  np.array([95, 70, 73, 95, 90, 60]),
                  np.array([70, 45, 48, 60, 65, 35]),
                  np.array([50, 25, 28, 45, 55, 15]),
                  np.array([50, 95, 180, 85, 45, 70]),
                  np.array([91, 90, 129, 90, 72, 108]),
                  np.array([58, 50, 145, 95, 105, 30]),
                  np.array([30, 30, 42, 30, 42, 70]),
                  np.array([60, 85, 60, 85, 60, 55]),
                  np.array([105, 140, 95, 55, 65, 45]),
                  np.array([43, 80, 65, 50, 35, 35]),
                  np.array([55, 55, 85, 65, 85, 35]),
                  np.array([40, 27, 60, 37, 50, 66]),
                  np.array([86, 81, 97, 81, 107, 43]),
                  np.array([67, 125, 40, 30, 30, 58]),
                  np.array([63, 120, 85, 90, 55, 55]),
                  np.array([120, 70, 120, 75, 130, 85]),
                  np.array([48, 61, 40, 61, 40, 50]),
                  np.array([85, 90, 80, 70, 80, 130]),
                  np.array([65, 80, 80, 59, 63, 58]),
                  np.array([70, 95, 125, 65, 75, 45]),
                  np.array([70, 50, 30, 95, 135, 105]),
                  np.array([55, 70, 40, 60, 40, 40]),
                  np.array([50, 50, 95, 40, 50, 35]),
                  np.array([39, 52, 43, 60, 50, 65]),
                  np.array([70, 90, 90, 135, 90, 125]),
                  np.array([105, 140, 55, 30, 55, 95]),
                  np.array([105, 30, 105, 140, 105, 55]),
                  np.array([70, 90, 45, 15, 45, 50]),
                  np.array([67, 58, 57, 81, 67, 101]),
                  np.array([60, 60, 50, 40, 50, 75]),
                  np.array([52, 65, 50, 45, 50, 38]),
                  np.array([70, 65, 65, 55, 55, 70]),
                  np.array([45, 55, 45, 65, 45, 75]),
                  np.array([75, 69, 72, 114, 100, 104]),
                  np.array([90, 70, 80, 70, 95, 70]),
                  np.array([75, 75, 60, 83, 60, 60]),
                  np.array([100, 120, 120, 150, 100, 90]),
                  np.array([50, 100, 150, 100, 150, 50]),
                  np.array([85, 56, 77, 50, 77, 78]),
                  np.array([10, 55, 25, 35, 45, 95]),
                  np.array([48, 48, 48, 48, 48, 48]),
                  np.array([60, 110, 70, 60, 60, 100]),
                  np.array([35, 85, 45, 35, 35, 75]),
                  np.array([90, 120, 120, 60, 60, 50]),
                  np.array([59, 110, 150, 45, 49, 35]),
                  np.array([65, 75, 90, 97, 123, 44]),
                  np.array([61, 84, 65, 70, 70, 70]),
                  np.array([91, 134, 95, 100, 100, 80]),
                  np.array([70, 90, 110, 60, 75, 95]),
                  np.array([41, 64, 45, 50, 50, 50]),
                  np.array([150, 80, 44, 90, 54, 80]),
                  np.array([90, 50, 34, 60, 44, 70]),
                  np.array([60, 85, 40, 30, 45, 68]),
                  np.array([60, 48, 45, 43, 90, 42]),
                  np.array([77, 120, 90, 60, 90, 48]),
                  np.array([62, 44, 50, 44, 50, 55]),
                  np.array([35, 80, 50, 50, 70, 120]),
                  np.array([100, 70, 70, 65, 65, 45]),
                  np.array([65, 40, 50, 125, 60, 30]),
                  np.array([58, 109, 112, 48, 48, 109]),
                  np.array([40, 70, 130, 60, 130, 25]),
                  np.array([45, 100, 135, 65, 135, 45]),
                  np.array([20, 40, 90, 30, 90, 25]),
                  np.array([60, 50, 70, 50, 90, 65]),
                  np.array([50, 65, 85, 35, 35, 55]),
                  np.array([65, 85, 70, 75, 70, 40]),
                  np.array([85, 115, 80, 105, 80, 50]),
                  np.array([55, 55, 50, 45, 65, 55]),
                  np.array([35, 60, 44, 40, 54, 55]),
                  np.array([65, 83, 57, 95, 85, 105]),
                  np.array([75, 123, 67, 95, 85, 95]),
                  np.array([40, 45, 40, 65, 40, 65]),
                  np.array([60, 50, 70, 80, 80, 140]),
                  np.array([45, 63, 37, 65, 55, 95]),
                  np.array([55, 55, 55, 85, 55, 30]),
                  np.array([110, 123, 65, 100, 65, 65]),
                  np.array([55, 75, 60, 75, 60, 103]),
                  np.array([84, 86, 88, 111, 101, 60]),
                  np.array([115, 115, 85, 90, 75, 100]),
                  np.array([70, 135, 105, 60, 105, 20]),
                  np.array([65, 65, 60, 130, 95, 110]),
                  np.array([62, 48, 54, 63, 60, 68]),
                  np.array([110, 135, 60, 50, 65, 88]),
                  np.array([60, 40, 80, 60, 45, 40]),
                  np.array([95, 95, 85, 125, 65, 55]),
                  np.array([104, 91, 63, 91, 73, 68]),
                  np.array([52, 65, 55, 58, 62, 60]),
                  np.array([65, 90, 65, 61, 61, 100]),
                  np.array([20, 15, 20, 10, 55, 80]),
                  np.array([40, 45, 40, 62, 60, 60]),
                  np.array([85, 105, 100, 79, 83, 78]),
                  np.array([44, 50, 91, 24, 86, 10]),
                  np.array([74, 94, 131, 54, 116, 20]),
                  np.array([49, 49, 56, 49, 61, 66]),
                  np.array([70, 55, 55, 80, 60, 45]),
                  np.array([44, 38, 39, 61, 79, 42]),
                  np.array([65, 130, 60, 95, 110, 65]),
                  np.array([62, 73, 55, 56, 52, 84]),
                  np.array([45, 50, 43, 40, 38, 62]),
                  np.array([85, 105, 55, 85, 50, 115]),
                  np.array([54, 45, 47, 75, 98, 52]),
                  np.array([78, 65, 68, 112, 154, 75]),
                  np.array([80, 100, 80, 80, 80, 100]),
                  np.array([69, 55, 45, 55, 55, 15]),
                  np.array([75, 90, 140, 60, 60, 40]),
                  np.array([66, 117, 70, 40, 50, 67]),
                  np.array([55, 40, 50, 65, 85, 40]),
                  np.array([41, 56, 40, 62, 44, 71]),
                  np.array([54, 63, 52, 83, 56, 97]),
                  np.array([70, 80, 70, 80, 70, 110]),
                  np.array([75, 80, 60, 65, 90, 102]),
                  np.array([85, 76, 64, 45, 55, 90]),
                  np.array([68, 90, 65, 50, 55, 82]),
                  np.array([68, 125, 65, 65, 115, 80]),
                  np.array([70, 77, 60, 97, 60, 108]),
                  np.array([80, 95, 82, 60, 82, 75]),
                  np.array([108, 130, 95, 80, 85, 102]),
                  np.array([68, 65, 65, 125, 115, 80]),
                  np.array([30, 35, 30, 100, 35, 80]),
                  np.array([111, 83, 68, 92, 82, 39]),
                  np.array([71, 120, 95, 120, 95, 99]),
                  np.array([60, 65, 60, 130, 75, 110]),
                  np.array([40, 80, 100, 30, 30, 20]),
                  np.array([58, 70, 45, 40, 45, 42]),
                  np.array([85, 135, 130, 60, 80, 25]),
                  np.array([70, 80, 65, 90, 65, 85]),
                  np.array([65, 60, 110, 130, 95, 65]),
                  np.array([80, 80, 80, 80, 80, 80]),
                  np.array([49, 55, 42, 42, 37, 85]),
                  np.array([65, 75, 105, 35, 65, 85]),
                  np.array([75, 95, 125, 45, 75, 95]),
                  np.array([60, 65, 70, 85, 75, 40]),
                  np.array([123, 100, 62, 97, 81, 68]),
                  np.array([75, 80, 70, 65, 75, 90]),
                  np.array([45, 67, 60, 35, 50, 63]),
                  np.array([80, 82, 78, 95, 80, 85]),
                  np.array([80, 120, 130, 55, 65, 45]),
                  np.array([59, 74, 50, 35, 50, 35]),
                  np.array([89, 124, 80, 55, 80, 55]),
                  np.array([90, 100, 70, 110, 150, 80]),
                  np.array([45, 50, 35, 55, 75, 40]),
                  np.array([55, 84, 105, 114, 75, 52]),
                  np.array([45, 30, 50, 55, 65, 45]),
                  np.array([70, 55, 95, 95, 110, 65]),
                  np.array([60, 45, 70, 75, 85, 55]),
                  np.array([90, 120, 75, 60, 60, 45]),
                  np.array([55, 95, 115, 45, 45, 35]),
                  np.array([72, 95, 67, 103, 71, 122]),
                  np.array([80, 80, 50, 40, 50, 25]),
                  np.array([75, 89, 85, 55, 65, 36]),
                  np.array([100, 150, 140, 100, 90, 90]),
                  np.array([100, 180, 160, 150, 90, 90]),
                  np.array([50, 65, 45, 85, 65, 95]),
                  np.array([55, 70, 45, 70, 50, 60]),
                  np.array([80, 45, 65, 90, 110, 80]),
                  np.array([70, 43, 53, 43, 53, 40]),
                  np.array([85, 105, 85, 40, 50, 40]),
                  np.array([95, 125, 79, 60, 100, 81]),
                  np.array([100, 5, 5, 15, 65, 30]),
                  np.array([144, 120, 60, 40, 60, 50]),
                  np.array([45, 50, 45, 115, 55, 95]),
                  np.array([78, 92, 75, 74, 63, 118]),
                  np.array([76, 147, 90, 60, 70, 97]),
                  np.array([85, 97, 66, 105, 66, 65]),
                  np.array([91, 90, 106, 130, 106, 77]),
                  np.array([62, 55, 52, 109, 94, 109]),
                  np.array([44, 38, 33, 61, 43, 70]),
                  np.array([80, 125, 75, 40, 95, 85]),
                  np.array([65, 80, 65, 35, 65, 60]),
                  np.array([68, 72, 78, 38, 42, 32]),
                  np.array([108, 112, 118, 68, 72, 47]),
                  np.array([50, 105, 79, 35, 110, 76]),
                  np.array([50, 120, 53, 35, 110, 87]),
                  np.array([50, 95, 95, 35, 110, 70]),
                  np.array([106, 130, 90, 110, 154, 90]),
                  np.array([100, 125, 52, 105, 52, 71]),
                  np.array([45, 80, 100, 35, 37, 28]),
                  np.array([60, 30, 30, 36, 56, 50]),
                  np.array([35, 35, 40, 35, 55, 50]),
                  np.array([30, 40, 70, 70, 25, 60]),
                  np.array([75, 90, 50, 110, 80, 95]),
                  np.array([45, 60, 30, 80, 50, 65]),
                  np.array([55, 104, 105, 94, 75, 52]),
                  np.array([92, 105, 90, 125, 90, 98]),
                  np.array([85, 73, 70, 73, 115, 67]),
                  np.array([90, 30, 15, 40, 20, 15]),
                  np.array([65, 47, 55, 73, 75, 85]),
                  np.array([76, 104, 71, 104, 71, 108]),
                  np.array([53, 54, 53, 37, 46, 45]),
                  np.array([60, 62, 63, 80, 80, 60]),
                  np.array([100, 60, 70, 85, 105, 60]),
                  np.array([115, 45, 20, 45, 25, 20]),
                  np.array([100, 100, 100, 100, 100, 100]),
                  np.array([65, 65, 60, 110, 95, 130]),
                  np.array([50, 47, 50, 57, 50, 65]),
                  np.array([75, 55, 70, 55, 95, 110]),
                  np.array([65, 50, 35, 115, 95, 95]),
                  np.array([30, 80, 90, 55, 45, 55]),
                  np.array([60, 115, 105, 65, 70, 80]),
                  np.array([40, 35, 30, 120, 70, 105]),
                  np.array([45, 25, 50, 25, 25, 35]),
                  np.array([105, 95, 80, 40, 80, 90]),
                  np.array([50, 75, 45, 40, 45, 60]),
                  np.array([60, 90, 70, 60, 120, 40]),
                  np.array([75, 95, 95, 95, 95, 85]),
                  np.array([55, 130, 115, 50, 50, 75]),
                  np.array([38, 35, 35, 65, 55, 50]),
                  np.array([60, 80, 95, 70, 85, 50]),
                  np.array([57, 80, 91, 80, 87, 75]),
                  np.array([40, 55, 70, 45, 60, 30]),
                  np.array([60, 100, 115, 70, 85, 90]),
                  np.array([40, 65, 95, 60, 45, 35]),
                  np.array([30, 105, 90, 25, 25, 50]),
                  np.array([37, 25, 41, 25, 41, 25]),
                  np.array([77, 85, 51, 55, 51, 65]),
                  np.array([60, 82, 45, 45, 45, 74]),
                  np.array([95, 117, 80, 65, 70, 92]),
                  np.array([100, 100, 90, 150, 140, 90]),
                  np.array([100, 150, 90, 180, 160, 90]),
                  np.array([125, 130, 90, 130, 90, 95]),
                  np.array([125, 170, 100, 120, 90, 95]),
                  np.array([125, 120, 90, 170, 100, 95]),
                  np.array([60, 90, 140, 50, 50, 40]),
                  np.array([60, 40, 60, 95, 60, 55]),
                  np.array([125, 58, 58, 76, 76, 67]),
                  np.array([130, 85, 80, 85, 95, 60]),
                  np.array([55, 85, 55, 50, 55, 60]),
                  np.array([50, 64, 50, 45, 50, 41]),
                  np.array([80, 80, 90, 110, 130, 110]),
                  np.array([80, 90, 80, 130, 110, 110]),
                  np.array([65, 110, 130, 60, 65, 95]),
                  np.array([75, 103, 80, 70, 80, 92]),
                  np.array([55, 35, 50, 55, 110, 85]),
                  np.array([40, 20, 30, 40, 80, 55]),
                  np.array([110, 85, 95, 80, 95, 50]),
                  np.array([90, 55, 75, 60, 75, 30]),
                  np.array([64, 88, 50, 88, 50, 106]),
                  np.array([66, 41, 77, 61, 87, 23]),
                  np.array([70, 60, 75, 110, 75, 90]),
                  np.array([45, 60, 45, 25, 45, 55]),
                  np.array([78, 70, 61, 50, 61, 100]),
                  np.array([62, 50, 58, 73, 54, 72]),
                  np.array([50, 30, 55, 65, 55, 20]),
                  np.array([60, 50, 50, 60, 70, 50]),
                  np.array([65, 76, 84, 54, 96, 105]),
                  np.array([40, 30, 30, 40, 50, 30]),
                  np.array([84, 71, 43, 71, 43, 48]),
                  np.array([70, 110, 70, 115, 70, 90]),
                  np.array([80, 70, 70, 90, 100, 70]),
                  np.array([106, 90, 130, 90, 154, 110]),
                  np.array([69, 69, 76, 69, 86, 91]),
                  np.array([70, 55, 65, 95, 85, 70]),
                  np.array([43, 30, 55, 40, 65, 97]),
                  np.array([60, 85, 49, 60, 49, 60]),
                  np.array([80, 120, 79, 95, 79, 70]),
                  np.array([90, 130, 80, 65, 85, 55]),
                  np.array([80, 100, 70, 50, 60, 45]),
                  np.array([70, 80, 50, 35, 35, 35]),
                  np.array([45, 75, 37, 70, 55, 83]),
                  np.array([50, 50, 120, 80, 80, 30]),
                  np.array([20, 10, 55, 15, 20, 80]),
                  np.array([65, 95, 57, 100, 85, 93]),
                  np.array([75, 95, 67, 125, 95, 83]),
                  np.array([25, 35, 70, 95, 55, 45]),
                  np.array([50, 60, 95, 120, 70, 70]),
                  np.array([70, 70, 115, 130, 90, 60]),
                  np.array([72, 60, 30, 20, 30, 25]),
                  np.array([86, 92, 88, 68, 75, 73]),
                  np.array([110, 130, 80, 70, 60, 80]),
                  np.array([100, 100, 100, 100, 100, 100]),
                  np.array([110, 65, 105, 55, 95, 80]),
                  np.array([70, 75, 60, 105, 60, 105]),
                  np.array([40, 80, 35, 35, 45, 70]),
                  np.array([65, 40, 70, 80, 140, 70]),
                  np.array([45, 20, 50, 60, 120, 50]),
                  np.array([75, 86, 67, 106, 67, 60]),
                  np.array([55, 40, 40, 65, 45, 35]),
                  np.array([70, 20, 50, 20, 50, 40]),
                  np.array([60, 80, 110, 50, 80, 45]),
                  np.array([70, 85, 70, 60, 70, 50]),
                  np.array([70, 60, 62, 80, 82, 60]),
                  np.array([50, 85, 85, 55, 55, 50]),
                  np.array([60, 60, 75, 60, 75, 80]),
                  np.array([30, 40, 55, 40, 55, 60]),
                  np.array([74, 48, 76, 83, 81, 104]),
                  np.array([74, 48, 76, 83, 81, 104]),
                  np.array([40, 45, 35, 40, 40, 90]),
                  np.array([80, 105, 105, 105, 105, 80]),
                  np.array([80, 135, 130, 95, 90, 70]),
                  np.array([60, 75, 100, 55, 80, 50]),
                  np.array([50, 20, 55, 25, 25, 30]),
                  np.array([100, 100, 100, 100, 100, 100]),
                  np.array([106, 110, 90, 154, 90, 130]),
                  np.array([45, 85, 50, 55, 50, 65]),
                  np.array([65, 125, 60, 95, 60, 105]),
                  np.array([70, 90, 70, 60, 60, 70]),
                  np.array([95, 60, 79, 100, 125, 81]),
                  np.array([95, 80, 105, 40, 70, 100]),
                  np.array([20, 25, 45, 70, 90, 60]),
                  np.array([55, 50, 40, 40, 40, 75]),
                  np.array([60, 40, 50, 75, 85, 95]),
                  np.array([60, 60, 60, 85, 85, 85]),
                  np.array([60, 60, 60, 105, 105, 105]),
                  np.array([90, 100, 90, 125, 85, 90]),
                  np.array([64, 78, 52, 78, 52, 81]),
                  np.array([70, 94, 50, 94, 50, 66]),
                  np.array([40, 45, 65, 100, 120, 90]),
                  np.array([50, 70, 50, 50, 50, 40]),
                  np.array([105, 105, 75, 65, 100, 50]),
                  np.array([135, 85, 40, 40, 85, 5]),
                  np.array([76, 25, 45, 67, 55, 24]),
                  np.array([60, 85, 42, 85, 42, 91]),
                  np.array([116, 55, 85, 107, 95, 29]),
                  np.array([40, 50, 45, 70, 45, 70]),
                  np.array([81, 102, 77, 85, 75, 85]),
                  np.array([90, 92, 87, 75, 85, 76]),
                  np.array([55, 47, 52, 40, 40, 41]),
                  np.array([46, 57, 40, 40, 40, 50]),
                  np.array([70, 62, 67, 55, 55, 56]),
                  np.array([61, 72, 57, 55, 55, 65]),
                  np.array([31, 45, 90, 30, 30, 40]),
                  np.array([73, 76, 75, 81, 100, 100]),
                  np.array([61, 90, 45, 50, 50, 160]),
                  np.array([100, 50, 50, 76, 96, 70]),
                  np.array([40, 30, 35, 45, 40, 55]),
                  np.array([85, 70, 80, 97, 80, 123]),
                  np.array([30, 45, 135, 45, 90, 30]),
                  np.array([60, 60, 40, 65, 45, 35]),
                  np.array([70, 70, 40, 60, 40, 60]),
                  np.array([75, 105, 75, 105, 75, 45]),
                  np.array([45, 50, 55, 75, 65, 30]),
                  np.array([35, 40, 100, 90, 55, 35]),
                  np.array([70, 60, 125, 115, 70, 55]),
                  np.array([35, 45, 160, 30, 45, 70]),
                  np.array([55, 55, 45, 63, 45, 45]),
                  np.array([60, 45, 70, 45, 90, 95]),
                  np.array([90, 120, 100, 150, 120, 100]),
                  np.array([75, 65, 55, 65, 55, 69]),
                  np.array([67, 82, 62, 46, 48, 43]),
                  np.array([95, 124, 78, 69, 71, 58]),
                  np.array([50, 53, 48, 53, 48, 64]),
                  np.array([50, 53, 48, 53, 48, 64]),
                  np.array([50, 53, 48, 53, 48, 64]),
                  np.array([35, 70, 55, 45, 55, 25]),
                  np.array([60, 95, 80, 60, 80, 30]),
                  np.array([45, 55, 39, 35, 39, 42]),
                  np.array([45, 85, 70, 40, 40, 60]),
                  np.array([60, 50, 100, 85, 70, 65]),
                  np.array([65, 70, 60, 65, 65, 115]),
                  np.array([45, 35, 50, 70, 50, 30]),
                  np.array([90, 60, 60, 40, 40, 40]),
                  np.array([43, 70, 48, 50, 60, 38]),
                  np.array([80, 80, 80, 80, 80, 80]),
                  np.array([20, 40, 15, 35, 35, 60]),
                  np.array([83, 80, 75, 70, 70, 101]),
                  np.array([63, 60, 55, 50, 50, 71]),
                  np.array([40, 45, 40, 35, 35, 56]),
                  np.array([50, 55, 50, 36, 30, 43]),
                  np.array([90, 93, 55, 70, 55, 55]),
                  np.array([35, 55, 40, 50, 50, 90]),
                  np.array([100, 100, 80, 60, 60, 50]),
                  np.array([50, 65, 90, 35, 35, 15]),
                  np.array([65, 125, 100, 55, 70, 85]),
                  np.array([53, 51, 53, 61, 56, 40]),
                  np.array([60, 50, 40, 85, 75, 95]),
                  np.array([90, 75, 75, 90, 100, 70]),
                  np.array([40, 50, 40, 40, 40, 90]),
                  np.array([65, 65, 65, 50, 50, 90]),
                  np.array([90, 95, 95, 70, 90, 70]),
                  np.array([50, 85, 55, 65, 65, 90]),
                  np.array([35, 55, 35, 30, 30, 35]),
                  np.array([65, 60, 70, 85, 75, 40]),
                  np.array([85, 80, 70, 135, 75, 90]),
                  np.array([85, 80, 90, 105, 95, 60]),
                  np.array([65, 105, 60, 60, 70, 95]),
                  np.array([64, 66, 68, 81, 76, 50]),
                  np.array([60, 55, 145, 75, 150, 40]),
                  np.array([50, 52, 48, 65, 50, 55]),
                  np.array([70, 84, 70, 65, 70, 51]),
                  np.array([41, 50, 37, 50, 37, 66]),
                  np.array([71, 82, 64, 64, 59, 112]),
                  np.array([86, 68, 72, 109, 66, 106]),
                  np.array([95, 85, 85, 65, 65, 35]),
                  np.array([58, 64, 58, 80, 65, 80]),
                  np.array([61, 78, 95, 56, 58, 57]),
                  np.array([65, 95, 75, 55, 55, 85]),
                  np.array([60, 90, 55, 90, 80, 110]),
                  np.array([90, 85, 75, 115, 100, 115]),
                  np.array([28, 25, 25, 45, 35, 40]),
                  np.array([97, 165, 60, 65, 50, 58]),
                  np.array([65, 100, 70, 80, 80, 105]),
                  np.array([55, 81, 60, 50, 70, 97]),
                  np.array([30, 56, 35, 25, 35, 72]),
                  np.array([105, 150, 90, 150, 90, 95]),
                  np.array([80, 50, 100, 100, 200, 50]),
                  np.array([110, 160, 110, 80, 110, 100]),
                  np.array([80, 100, 200, 50, 100, 50]),
                  np.array([80, 75, 150, 75, 150, 50]),
                  np.array([100, 90, 130, 45, 65, 55]),
                  np.array([35, 65, 35, 65, 35, 65]),
                  np.array([100, 120, 100, 150, 120, 90]),
                  np.array([110, 65, 75, 125, 85, 30]),
                  np.array([105, 130, 120, 45, 45, 40]),
                  np.array([80, 85, 95, 30, 30, 25]),
                  np.array([115, 140, 130, 55, 55, 40]),
                  np.array([40, 70, 40, 35, 40, 60]),
                  np.array([55, 75, 85, 25, 25, 15]),
                  np.array([50, 60, 45, 100, 80, 65]),
                  np.array([60, 70, 65, 125, 105, 90]),
                  np.array([50, 50, 77, 95, 77, 91]),
                  np.array([50, 65, 107, 105, 107, 86]),
                  np.array([50, 65, 107, 105, 107, 86]),
                  np.array([50, 65, 107, 105, 107, 86]),
                  np.array([50, 65, 107, 105, 107, 86]),
                  np.array([50, 65, 107, 105, 107, 86]),
                  np.array([70, 83, 50, 37, 50, 60]),
                  np.array([50, 75, 75, 65, 65, 50]),
                  np.array([95, 135, 80, 110, 80, 100]),
                  np.array([95, 100, 85, 108, 70, 70]),
                  np.array([50, 72, 35, 35, 35, 65]),
                  np.array([50, 75, 85, 20, 30, 40]),
                  np.array([75, 100, 110, 45, 55, 65]),
                  np.array([75, 125, 75, 30, 75, 85]),
                  np.array([80, 100, 70, 60, 70, 95]),
                  np.array([38, 35, 40, 27, 25, 35]),
                  np.array([70, 85, 65, 105, 85, 120]),
                  np.array([70, 130, 100, 55, 80, 65]),
                  np.array([60, 100, 89, 55, 69, 112]),
                  np.array([65, 90, 115, 45, 115, 58]),
                  np.array([50, 75, 70, 35, 70, 48]),
                  np.array([70, 110, 80, 55, 80, 105]),
                  np.array([55, 65, 95, 95, 45, 85]),
                  np.array([80, 92, 65, 65, 80, 68]),
                  np.array([90, 60, 70, 75, 70, 45]),
                  np.array([40, 40, 50, 30, 30, 30]),
                  np.array([65, 45, 55, 45, 70, 45]),
                  np.array([105, 95, 75, 85, 75, 74]),
                  np.array([35, 46, 34, 35, 45, 20]),
                  np.array([75, 75, 95, 75, 95, 113]),
                  np.array([60, 60, 75, 60, 75, 83]),
                  np.array([73, 100, 60, 100, 60, 65]),
                  np.array([45, 53, 70, 40, 60, 42]),
                  np.array([70, 120, 40, 95, 40, 95]),
                  np.array([1, 90, 45, 30, 30, 40]),
                  np.array([65, 95, 100, 60, 50, 50]),
                  np.array([30, 65, 100, 45, 25, 40]),
                  np.array([76, 48, 48, 57, 62, 34]),
                  np.array([50, 40, 85, 40, 65, 25]),
                  np.array([30, 42, 118, 42, 88, 30]),
                  np.array([90, 100, 60, 90, 60, 80]),
                  np.array([45, 65, 34, 40, 34, 45]),
                  np.array([60, 40, 60, 40, 60, 35]),
                  np.array([20, 10, 230, 10, 230, 5]),
                  np.array([44, 75, 35, 63, 33, 45]),
                  np.array([72, 58, 80, 103, 80, 97]),
                  np.array([50, 35, 55, 25, 25, 15]),
                  np.array([75, 98, 63, 98, 63, 101]),
                  np.array([75, 98, 63, 98, 63, 101]),
                  np.array([75, 98, 63, 98, 63, 101]),
                  np.array([65, 80, 140, 40, 70, 70]),
                  np.array([66, 65, 48, 62, 57, 52]),
                  np.array([55, 45, 50, 45, 65, 80]),
                  np.array([50, 45, 45, 35, 35, 50]),
                  np.array([40, 50, 90, 30, 55, 65]),
                  np.array([50, 60, 60, 60, 60, 30]),
                  np.array([103, 93, 67, 71, 61, 84]),
                  np.array([150, 160, 100, 95, 65, 100]),
                  np.array([60, 60, 60, 35, 35, 30]),
                  np.array([68, 75, 53, 83, 113, 60]),
                  np.array([95, 75, 110, 100, 80, 30]),
                  np.array([95, 75, 80, 100, 110, 30]),
                  np.array([90, 65, 65, 40, 40, 15]),
                  np.array([40, 40, 40, 70, 40, 20]),
                  np.array([82, 80, 86, 85, 75, 72]),
                  np.array([55, 20, 35, 20, 45, 75]),
                  np.array([45, 30, 15, 85, 65, 65]),
                  np.array([55, 95, 55, 35, 75, 115]),
                  np.array([45, 45, 55, 45, 55, 63]),
                  np.array([160, 110, 65, 65, 110, 30]),
                  np.array([50, 50, 50, 50, 50, 50]),
                  np.array([60, 62, 50, 62, 60, 40]),
                  np.array([60, 80, 50, 40, 40, 30]),
                  np.array([45, 30, 40, 105, 50, 20]),
                  np.array([70, 95, 85, 55, 65, 70]),
                  np.array([40, 60, 30, 31, 31, 70]),
                  np.array([45, 22, 60, 27, 30, 29]),
                  np.array([70, 40, 50, 55, 50, 25]),
                  np.array([40, 60, 40, 40, 40, 30]),
                  np.array([60, 60, 60, 60, 60, 60]),
                  np.array([50, 92, 108, 92, 108, 35]),
                  np.array([60, 25, 35, 70, 80, 60]),
                  np.array([78, 52, 60, 63, 65, 23]),
                  np.array([44, 48, 65, 50, 64, 43]),
                  np.array([73, 95, 62, 85, 65, 85]),
                  np.array([85, 120, 70, 50, 60, 100]),
                  np.array([55, 75, 50, 40, 40, 80]),
                  np.array([40, 55, 30, 30, 30, 60]),
                  np.array([60, 75, 85, 100, 85, 115]),
                  np.array([30, 45, 55, 70, 55, 85]),
                  np.array([75, 85, 200, 55, 65, 30]),
                  np.array([85, 110, 90, 45, 90, 80]),
                  np.array([109, 66, 84, 81, 99, 32]),
                  np.array([63, 63, 47, 41, 41, 74]),
                  np.array([70, 100, 115, 30, 65, 30]),
                  np.array([100, 75, 115, 90, 115, 85]),
                  np.array([75, 75, 55, 105, 85, 30]),
                  np.array([30, 30, 30, 30, 30, 30]),
                  np.array([40, 30, 32, 50, 52, 65]),
                  np.array([45, 40, 60, 40, 75, 50]),
                  np.array([55, 63, 90, 50, 80, 42]),
                  np.array([100, 73, 83, 73, 83, 55]),
                  np.array([100, 110, 90, 85, 90, 60]),
                  np.array([75, 87, 63, 87, 63, 98]),
                  np.array([60, 85, 60, 50, 50, 125]),
                  np.array([50, 50, 40, 30, 30, 50]),
                  np.array([62, 48, 66, 59, 57, 49]),
                  np.array([67, 57, 55, 77, 55, 114]),
                  np.array([95, 65, 65, 110, 130, 60]),
                  np.array([40, 55, 30, 30, 30, 85]),
                  np.array([78, 81, 71, 74, 69, 126]),
                  np.array([65, 55, 115, 100, 40, 60]),
                  np.array([100, 100, 125, 110, 50, 50]),
                  np.array([75, 100, 95, 40, 70, 110]),
                  np.array([60, 80, 50, 50, 50, 40]),
                  np.array([40, 40, 35, 50, 100, 70]),
                  np.array([80, 70, 65, 80, 120, 100]),
                  np.array([65, 63, 45, 45, 45, 45]),
                  np.array([91, 129, 90, 72, 90, 108]),
                  np.array([120, 100, 85, 30, 85, 45]),
                  np.array([75, 80, 55, 25, 35, 35]),
                  np.array([54, 78, 103, 53, 45, 22]),
                  np.array([85, 50, 95, 120, 115, 80]),
                  np.array([35, 20, 65, 40, 65, 20]),
                  np.array([55, 40, 85, 80, 105, 40]),
                  np.array([45, 60, 40, 70, 50, 45]),
                  np.array([70, 85, 140, 85, 70, 20]),
                  np.array([95, 109, 105, 75, 85, 56]),
                  np.array([50, 65, 64, 44, 48, 43]),
                  np.array([83, 106, 65, 86, 65, 85]),
                  np.array([62, 77, 62, 50, 42, 65]),
                  np.array([45, 100, 45, 45, 45, 10]),
                  np.array([40, 45, 35, 65, 55, 70]),
                  np.array([85, 110, 76, 65, 82, 56]),
                  np.array([99, 68, 83, 72, 87, 51]),
                  np.array([50, 50, 62, 40, 62, 65]),
                  np.array([55, 68, 64, 45, 55, 31]),
                  np.array([50, 50, 40, 50, 40, 64]),
                  np.array([35, 55, 40, 45, 40, 60]),
                  np.array([78, 84, 78, 109, 85, 100]),
                  np.array([100, 134, 110, 95, 100, 61]),
                  np.array([82, 121, 119, 69, 59, 71]),
                  np.array([35, 35, 35, 35, 35, 35]),
                  np.array([58, 89, 77, 45, 45, 48]),
                  np.array([95, 65, 110, 60, 130, 65]),
                  np.array([80, 115, 80, 65, 55, 93]),
                  np.array([48, 72, 48, 72, 48, 48]),
                  np.array([90, 130, 75, 75, 75, 55]),
                  np.array([75, 75, 130, 75, 130, 95]),
                  np.array([51, 65, 65, 80, 75, 59]),
                  np.array([36, 50, 50, 65, 60, 44]),
                  np.array([71, 95, 85, 110, 95, 79]),
                  np.array([130, 65, 60, 110, 95, 65]),
                  np.array([30, 45, 59, 30, 39, 57]),
                  np.array([70, 65, 60, 90, 75, 90]),
                  np.array([60, 55, 50, 40, 55, 45]),
                  np.array([80, 82, 83, 100, 100, 80]),
                  np.array([70, 80, 102, 80, 102, 40]),
                  np.array([50, 70, 50, 50, 50, 70]),
                  np.array([100, 100, 100, 100, 100, 100]),
                  np.array([80, 105, 65, 100, 70, 70]),
                  np.array([80, 80, 80, 55, 55, 90]),
                  np.array([75, 80, 85, 110, 90, 50]),
                  np.array([91, 90, 72, 90, 129, 108]),
                  np.array([80, 52, 50, 90, 50, 89]),
                  np.array([65, 73, 55, 47, 75, 85]),
                  np.array([80, 110, 120, 130, 90, 70]),
                  np.array([85, 60, 65, 135, 105, 100]),
                  np.array([40, 30, 50, 55, 55, 100]),
                  np.array([70, 55, 75, 45, 65, 60]),
                  np.array([38, 41, 40, 50, 65, 65]),
                  np.array([130, 70, 35, 70, 35, 60]),
                  np.array([170, 90, 45, 90, 45, 60]),
                  np.array([110, 80, 90, 95, 90, 65]),
                  np.array([59, 63, 80, 65, 80, 58]),
                  np.array([60, 85, 69, 60, 69, 77]),
                  np.array([70, 120, 65, 45, 85, 125]),
                  np.array([40, 35, 30, 20, 20, 50]),
                  np.array([65, 90, 50, 85, 45, 55]),
                  np.array([65, 90, 120, 85, 70, 60]),
                  np.array([60, 67, 85, 77, 75, 116]),
                  np.array([40, 55, 99, 40, 79, 47]),
                  np.array([110, 78, 73, 76, 71, 60]),
                  np.array([64, 51, 23, 51, 23, 28]),
                  np.array([140, 70, 45, 85, 50, 45]),
                  np.array([40, 30, 30, 55, 30, 85]),
                  np.array([190, 33, 58, 33, 58, 33]),
                  np.array([55, 45, 43, 55, 43, 72]),
                  np.array([55, 45, 45, 25, 25, 15]),
                  np.array([60, 59, 85, 79, 105, 36]),
                  np.array([60, 79, 105, 59, 85, 36]),
                  np.array([60, 69, 95, 69, 95, 36]),
                  np.array([45, 45, 35, 20, 30, 20]),
                  np.array([95, 23, 48, 23, 48, 23]),
                  np.array([65, 75, 70, 95, 70, 95]),
                  np.array([126, 131, 95, 131, 98, 99]),
                  np.array([38, 30, 85, 55, 65, 30]),
                  np.array([65, 65, 45, 75, 45, 95]),
                  np.array([86, 76, 86, 116, 56, 95]),
                  np.array([126, 131, 95, 131, 98, 99]),
                  np.array([73, 115, 60, 60, 60, 90]),
                  np.array([90, 90, 85, 125, 90, 100]),
                  np.array([75, 100, 63, 80, 63, 116]),
                  np.array([100, 150, 120, 120, 100, 90]),
                  np.array([38, 30, 41, 30, 41, 60]),
                  np.array([60, 105, 60, 120, 60, 105]),
                  np.array([40, 65, 40, 80, 40, 65]),
                  np.array([40, 45, 35, 30, 40, 55]),
                  np.array([72, 85, 70, 65, 70, 58])])


def combining_objects():
    names = ['Bulbasaur', 'Charmander', 'Squirtle']
    hps = [45, 39, 44]
    combined = []
    for i, pokemon in enumerate(names):
        combined.append((pokemon, hps[i]))
    print(combined)


def combining_objects_with_zip():
    names = ['Bulbasaur', 'Charmander', 'Squirtle']
    hps = [45, 39, 44]
    combined_zip = zip(names, hps)
    print(type(combined_zip))
    combined_zip_list = [*combined_zip]
    print(combined_zip_list)


"""
The collections module:
 + Part of Python's Standard Library (built-in module)
 + Specialized container datatypes
    + Alternatives to general purpose dict, list, set, and tuple.
 + Notable:
    + namedtuple: tuple subclasses with named fields
    + deque: list-like container with fast appends and pops
    + Counter: dict for counting hashable objects
    + OrderedDict: dict that retains order of entries
    + defaultdict: dict that calls a factory function to supply missing values

Counting with loop:
"""


def counting_with_loops():
    # Each Pokemon's type (720 total)
    poke_types1 = ['Grass', 'Dark', 'Fire', 'Fire', 'Poison', 'Grass']
    type_counts = {}
    for poke_type in poke_types1:
        if poke_type not in type_counts:
            type_counts[poke_type] = 1
        else:
            type_counts[poke_type] += 1
    print(type_counts)

    # A much more efficient approach:
    from collections import Counter
    type_counts = Counter(poke_types1)
    print(type_counts)


"""
The itertools module:
 + Part of Python's Standard Library (built-in module)
 + Functional tools for creating and using iterators
 + Notable:
    + Infinite iterators: count, cycle, repeat
    + Finite iterators: accumulate, chain, zip_longest, etc.
    + Combination generators (our focus): product, permutations, combinations
"""


def combinations_with_loops():
    poke_types1 = ['Bug', 'Fire', 'Ghost', 'Grass', 'Water']
    combos = []

    for x in poke_types1:
        for y in poke_types1:
            if x == y:
                continue
            if ((x, y) not in combos) & ((y, x) not in combos):
                combos.append((x, y))
    print(combos)

    # A better way using itertools.combinations()
    from itertools import combinations
    combos_obj = combinations(poke_types1, 2)
    print(type(combos_obj))
    print([*combos_obj])


"""
Set Theory:
 + Branch of Mathematics applied to collections of objects.
    + i.e. sets
 + Python has built-in set datatype with accompanying methods:
    + intersection(): All elements that are in both sets.
    + difference(): All elements in one set but not the other.
    + symmetric_difference(): All elements in exactly one set.
    + union(): All elements that are in either set.
 + Fast membership testing:
    + Check if a value exists in a sequence or not.
    + Using the in operator.
"""


def comparing_objects_with_loops():
    list_a = ['Bulbasaur', 'Charmander', 'Squirtle']
    list_b = ['Caterpie', 'Pidgey', 'Squirtle']

    # Show objects in both lists - the inefficient way (433ns):
    in_common = []
    for pokemon_a in list_a:
        for pokemon_b in list_b:
            if pokemon_a == pokemon_b:
                in_common.append(pokemon_a)
    print(in_common)

    # Using sets (141ns):
    set_a = set(list_a)
    print(set_a)
    set_b = set(list_b)
    print(set_b)
    print(set_a.intersection(set_b))

    # Set difference:
    print(set_a.difference(set_b))

    # Symmetric Difference:
    print(set_a.symmetric_difference(set_b))

    #  Unions:
    print(set_a.union(set_b))


def uniques_with_sets():
    primary_types = ['Grass', 'Psychic', 'Dark', 'Bug', "Fire", "Water"]
    unique_types = []
    # Inefficient way:
    for prim_type in primary_types:
        if prim_type not in unique_types:
            unique_types.append(prim_type)
    print(unique_types)

    # OR WE COULD:
    unique_types_set = set(primary_types)
    print(unique_types_set)


"""
Eliminating Loops:

Looping in Python:
 + Looping patterns:
    + for loop: iterate over sequence piece-by-piece
    + while loop: repeat loop as long as condition is met
    + "nested" loops: use one loop inside of another!
    + all are costly!
 + Benefits of eliminating loops:
    + Fewer lines of code
    + Better code readability
        + "Flat is better than nested"
    + Efficiency gains
    
Eliminating loops with built-ins:
"""

poke_stats = [
    [90, 92, 75, 60],
    [25, 20, 15, 90],
    [65, 130, 60, 75]
]
poke_types = ['Bug', 'Fire', 'Ghost', 'Grass', 'Water']


def eliminating_loops_with_built_ins():
    # For loop approach
    totals = []
    for row in poke_stats:
        totals.append(sum(row))
    print(totals)
    # List comprehension
    totals_comp = [sum(row) for row in poke_stats]
    print(totals_comp)
    # Built-in map() function
    totals_map = [*map(sum, poke_stats)]
    print(totals_map)
    print("")

    # Nested Approach
    combos = []
    for x in poke_types:
        for y in poke_types:
            if x == y:
                continue
            if ((x, y) not in combos) & ((y, x) not in combos):
                combos.append((x, y))
    print(combos)

    # Built-in module approach
    from itertools import combinations
    combos2 = [*combinations(poke_types, 2)]
    print(combos2)


def eliminating_loops_with_numpy():
    # Array of HP, Attack, Defense, Speed
    import numpy as np

    poke_stats_np = np.array(poke_stats)

    # Bad way
    avgs = []
    for row in poke_stats_np:
        avg = np.mean(row)
        avgs.append(avg)
    print(avgs)

    # The NumPy way
    avgs_np = poke_stats_np.mean(axis=1)
    print(avgs_np)


"""
Writing Better Loops:

Loop Lesson Caveat:
 + Some of the following loops can be eliminated with techniques covered in previous lessons.
 + Examples in this lesson are for demonstrative purposes only!!!!!
 
Writing Better Loops:
 + Understand what is being done with each loop iteration.
 + Move one-time calculations outside (above) the loop.
 + Use holistic conversions outside (below) the loop.
 + Anything that is done once should be outside the loop.
 
Moving Calculations Above A Loop:
"""


def moving_calculations_above_a_loop():
    mc_names = ['Absol', 'Aron', 'Jynx', 'Natu', 'Onix']
    attacks = np.array([130, 70, 50, 50, 45])
    for pokemon, attack in zip(mc_names, attacks):
        total_attack_avg = attacks.mean()
        if attack > total_attack_avg:
            print(f"{pokemon}'s attack: {attack} > average: {total_attack_avg}")

    # After moving total attack avg outside the loop:
    total_attack_avg = attacks.mean()
    for pokemon, attack in zip(mc_names, attacks):
        if attack > total_attack_avg:
            print(f"{pokemon}'s attack: {attack} > average: {total_attack_avg}")


def using_holistic_conversions():
    # Inefficient
    poke_data = []
    for poke_tuple in zip(names, primary_types, generations):
        poke_list1 = list(poke_tuple)
        poke_data.append(poke_list1)
    print(poke_data)

    # Efficient way:
    poke_data_tuples = []
    for poke_tuple in zip(names, primary_types, generations):
        poke_data_tuples.append(poke_tuple)
    poke_data = [*map(list, poke_data_tuples)]
    print(poke_data)


def main():
    # uniques_with_sets()
    using_holistic_conversions()


if __name__ == '__main__':
    main()
